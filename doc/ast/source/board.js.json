{
  "type": "File",
  "start": 0,
  "end": 32411,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 759,
      "column": 2
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 32411,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 759,
        "column": 2
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ImportDeclaration",
        "start": 14,
        "end": 47,
        "loc": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 33
          }
        },
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 23,
            "end": 27,
            "loc": {
              "start": {
                "line": 2,
                "column": 9
              },
              "end": {
                "line": 2,
                "column": 13
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 23,
              "end": 27,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 9
                },
                "end": {
                  "line": 2,
                  "column": 13
                },
                "identifierName": "Tile"
              },
              "name": "Tile"
            },
            "local": {
              "type": "Identifier",
              "start": 23,
              "end": 27,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 9
                },
                "end": {
                  "line": 2,
                  "column": 13
                },
                "identifierName": "Tile"
              },
              "name": "Tile"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 35,
          "end": 46,
          "loc": {
            "start": {
              "line": 2,
              "column": 21
            },
            "end": {
              "line": 2,
              "column": 32
            }
          },
          "extra": {
            "rawValue": "./tile.js",
            "raw": "'./tile.js'"
          },
          "value": "./tile.js"
        },
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Board class, which stores the game board and all related methods\n * @implements {Tile}\n ",
            "start": 49,
            "end": 146,
            "loc": {
              "start": {
                "line": 4,
                "column": 0
              },
              "end": {
                "line": 7,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 147,
        "end": 1879,
        "loc": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 67,
            "column": 1
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "ClassDeclaration",
          "start": 154,
          "end": 1879,
          "loc": {
            "start": {
              "line": 8,
              "column": 7
            },
            "end": {
              "line": 67,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 160,
            "end": 165,
            "loc": {
              "start": {
                "line": 8,
                "column": 13
              },
              "end": {
                "line": 8,
                "column": 18
              },
              "identifierName": "Board"
            },
            "name": "Board",
            "leadingComments": null
          },
          "superClass": null,
          "body": {
            "type": "ClassBody",
            "start": 166,
            "end": 1879,
            "loc": {
              "start": {
                "line": 8,
                "column": 19
              },
              "end": {
                "line": 67,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ClassMethod",
                "start": 494,
                "end": 1479,
                "loc": {
                  "start": {
                    "line": 15,
                    "column": 1
                  },
                  "end": {
                    "line": 52,
                    "column": 2
                  }
                },
                "static": false,
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 494,
                  "end": 505,
                  "loc": {
                    "start": {
                      "line": 15,
                      "column": 1
                    },
                    "end": {
                      "line": 15,
                      "column": 12
                    },
                    "identifierName": "constructor"
                  },
                  "name": "constructor",
                  "leadingComments": null
                },
                "kind": "constructor",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 506,
                    "end": 514,
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 13
                      },
                      "end": {
                        "line": 15,
                        "column": 21
                      },
                      "identifierName": "numMines"
                    },
                    "name": "numMines"
                  },
                  {
                    "type": "Identifier",
                    "start": 516,
                    "end": 520,
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 23
                      },
                      "end": {
                        "line": 15,
                        "column": 27
                      },
                      "identifierName": "rows"
                    },
                    "name": "rows"
                  },
                  {
                    "type": "Identifier",
                    "start": 522,
                    "end": 529,
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 29
                      },
                      "end": {
                        "line": 15,
                        "column": 36
                      },
                      "identifierName": "columns"
                    },
                    "name": "columns"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 531,
                  "end": 1479,
                  "loc": {
                    "start": {
                      "line": 15,
                      "column": 38
                    },
                    "end": {
                      "line": 52,
                      "column": 2
                    }
                  },
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "start": 613,
                      "end": 630,
                      "loc": {
                        "start": {
                          "line": 18,
                          "column": 2
                        },
                        "end": {
                          "line": 18,
                          "column": 19
                        }
                      },
                      "expression": {
                        "type": "AssignmentExpression",
                        "start": 613,
                        "end": 629,
                        "loc": {
                          "start": {
                            "line": 18,
                            "column": 2
                          },
                          "end": {
                            "line": 18,
                            "column": 18
                          }
                        },
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "start": 613,
                          "end": 622,
                          "loc": {
                            "start": {
                              "line": 18,
                              "column": 2
                            },
                            "end": {
                              "line": 18,
                              "column": 11
                            }
                          },
                          "object": {
                            "type": "ThisExpression",
                            "start": 613,
                            "end": 617,
                            "loc": {
                              "start": {
                                "line": 18,
                                "column": 2
                              },
                              "end": {
                                "line": 18,
                                "column": 6
                              }
                            },
                            "leadingComments": null
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 618,
                            "end": 622,
                            "loc": {
                              "start": {
                                "line": 18,
                                "column": 7
                              },
                              "end": {
                                "line": 18,
                                "column": 11
                              },
                              "identifierName": "rows"
                            },
                            "name": "rows"
                          },
                          "computed": false,
                          "leadingComments": null
                        },
                        "right": {
                          "type": "Identifier",
                          "start": 625,
                          "end": 629,
                          "loc": {
                            "start": {
                              "line": 18,
                              "column": 14
                            },
                            "end": {
                              "line": 18,
                              "column": 18
                            },
                            "identifierName": "rows"
                          },
                          "name": "rows"
                        },
                        "leadingComments": null
                      },
                      "leadingComments": [
                        {
                          "type": "CommentBlock",
                          "value": "* Number of rows (height) on the board. Range: 2-50\n\t\t* @type {number} ",
                          "start": 535,
                          "end": 610,
                          "loc": {
                            "start": {
                              "line": 16,
                              "column": 2
                            },
                            "end": {
                              "line": 17,
                              "column": 21
                            }
                          }
                        }
                      ],
                      "trailingComments": [
                        {
                          "type": "CommentBlock",
                          "value": "* Number of columns (length) on the board. Range: 2-50\n\t\t* @type {number} ",
                          "start": 636,
                          "end": 714,
                          "loc": {
                            "start": {
                              "line": 20,
                              "column": 2
                            },
                            "end": {
                              "line": 21,
                              "column": 21
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "ExpressionStatement",
                      "start": 717,
                      "end": 740,
                      "loc": {
                        "start": {
                          "line": 22,
                          "column": 2
                        },
                        "end": {
                          "line": 22,
                          "column": 25
                        }
                      },
                      "expression": {
                        "type": "AssignmentExpression",
                        "start": 717,
                        "end": 739,
                        "loc": {
                          "start": {
                            "line": 22,
                            "column": 2
                          },
                          "end": {
                            "line": 22,
                            "column": 24
                          }
                        },
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "start": 717,
                          "end": 729,
                          "loc": {
                            "start": {
                              "line": 22,
                              "column": 2
                            },
                            "end": {
                              "line": 22,
                              "column": 14
                            }
                          },
                          "object": {
                            "type": "ThisExpression",
                            "start": 717,
                            "end": 721,
                            "loc": {
                              "start": {
                                "line": 22,
                                "column": 2
                              },
                              "end": {
                                "line": 22,
                                "column": 6
                              }
                            },
                            "leadingComments": null
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 722,
                            "end": 729,
                            "loc": {
                              "start": {
                                "line": 22,
                                "column": 7
                              },
                              "end": {
                                "line": 22,
                                "column": 14
                              },
                              "identifierName": "columns"
                            },
                            "name": "columns"
                          },
                          "computed": false,
                          "leadingComments": null
                        },
                        "right": {
                          "type": "Identifier",
                          "start": 732,
                          "end": 739,
                          "loc": {
                            "start": {
                              "line": 22,
                              "column": 17
                            },
                            "end": {
                              "line": 22,
                              "column": 24
                            },
                            "identifierName": "columns"
                          },
                          "name": "columns"
                        },
                        "leadingComments": null
                      },
                      "leadingComments": [
                        {
                          "type": "CommentBlock",
                          "value": "* Number of columns (length) on the board. Range: 2-50\n\t\t* @type {number} ",
                          "start": 636,
                          "end": 714,
                          "loc": {
                            "start": {
                              "line": 20,
                              "column": 2
                            },
                            "end": {
                              "line": 21,
                              "column": 21
                            }
                          }
                        }
                      ],
                      "trailingComments": [
                        {
                          "type": "CommentBlock",
                          "value": "* Number of mines on the board. Range: 1-2499 (Depending on board size)\n\t\t* @type {number} ",
                          "start": 746,
                          "end": 841,
                          "loc": {
                            "start": {
                              "line": 24,
                              "column": 2
                            },
                            "end": {
                              "line": 25,
                              "column": 21
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "ExpressionStatement",
                      "start": 844,
                      "end": 871,
                      "loc": {
                        "start": {
                          "line": 26,
                          "column": 2
                        },
                        "end": {
                          "line": 26,
                          "column": 29
                        }
                      },
                      "expression": {
                        "type": "AssignmentExpression",
                        "start": 844,
                        "end": 870,
                        "loc": {
                          "start": {
                            "line": 26,
                            "column": 2
                          },
                          "end": {
                            "line": 26,
                            "column": 28
                          }
                        },
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "start": 844,
                          "end": 859,
                          "loc": {
                            "start": {
                              "line": 26,
                              "column": 2
                            },
                            "end": {
                              "line": 26,
                              "column": 17
                            }
                          },
                          "object": {
                            "type": "ThisExpression",
                            "start": 844,
                            "end": 848,
                            "loc": {
                              "start": {
                                "line": 26,
                                "column": 2
                              },
                              "end": {
                                "line": 26,
                                "column": 6
                              }
                            },
                            "leadingComments": null
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 849,
                            "end": 859,
                            "loc": {
                              "start": {
                                "line": 26,
                                "column": 7
                              },
                              "end": {
                                "line": 26,
                                "column": 17
                              },
                              "identifierName": "minesTotal"
                            },
                            "name": "minesTotal"
                          },
                          "computed": false,
                          "leadingComments": null
                        },
                        "right": {
                          "type": "Identifier",
                          "start": 862,
                          "end": 870,
                          "loc": {
                            "start": {
                              "line": 26,
                              "column": 20
                            },
                            "end": {
                              "line": 26,
                              "column": 28
                            },
                            "identifierName": "numMines"
                          },
                          "name": "numMines"
                        },
                        "leadingComments": null
                      },
                      "leadingComments": [
                        {
                          "type": "CommentBlock",
                          "value": "* Number of mines on the board. Range: 1-2499 (Depending on board size)\n\t\t* @type {number} ",
                          "start": 746,
                          "end": 841,
                          "loc": {
                            "start": {
                              "line": 24,
                              "column": 2
                            },
                            "end": {
                              "line": 25,
                              "column": 21
                            }
                          }
                        }
                      ],
                      "trailingComments": [
                        {
                          "type": "CommentBlock",
                          "value": "* 2D array storing all tile objects on the board.\n\t\t* @type {Tile[]} ",
                          "start": 877,
                          "end": 950,
                          "loc": {
                            "start": {
                              "line": 28,
                              "column": 2
                            },
                            "end": {
                              "line": 29,
                              "column": 21
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "ExpressionStatement",
                      "start": 953,
                      "end": 967,
                      "loc": {
                        "start": {
                          "line": 30,
                          "column": 2
                        },
                        "end": {
                          "line": 30,
                          "column": 16
                        }
                      },
                      "expression": {
                        "type": "AssignmentExpression",
                        "start": 953,
                        "end": 966,
                        "loc": {
                          "start": {
                            "line": 30,
                            "column": 2
                          },
                          "end": {
                            "line": 30,
                            "column": 15
                          }
                        },
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "start": 953,
                          "end": 961,
                          "loc": {
                            "start": {
                              "line": 30,
                              "column": 2
                            },
                            "end": {
                              "line": 30,
                              "column": 10
                            }
                          },
                          "object": {
                            "type": "ThisExpression",
                            "start": 953,
                            "end": 957,
                            "loc": {
                              "start": {
                                "line": 30,
                                "column": 2
                              },
                              "end": {
                                "line": 30,
                                "column": 6
                              }
                            },
                            "leadingComments": null
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 958,
                            "end": 961,
                            "loc": {
                              "start": {
                                "line": 30,
                                "column": 7
                              },
                              "end": {
                                "line": 30,
                                "column": 10
                              },
                              "identifierName": "arr"
                            },
                            "name": "arr"
                          },
                          "computed": false,
                          "leadingComments": null
                        },
                        "right": {
                          "type": "ArrayExpression",
                          "start": 964,
                          "end": 966,
                          "loc": {
                            "start": {
                              "line": 30,
                              "column": 13
                            },
                            "end": {
                              "line": 30,
                              "column": 15
                            }
                          },
                          "elements": []
                        },
                        "leadingComments": null
                      },
                      "leadingComments": [
                        {
                          "type": "CommentBlock",
                          "value": "* 2D array storing all tile objects on the board.\n\t\t* @type {Tile[]} ",
                          "start": 877,
                          "end": 950,
                          "loc": {
                            "start": {
                              "line": 28,
                              "column": 2
                            },
                            "end": {
                              "line": 29,
                              "column": 21
                            }
                          }
                        }
                      ],
                      "trailingComments": [
                        {
                          "type": "CommentBlock",
                          "value": "* Number of mines that the user has flagged. Must be equal to minesTotal to win the game.\n\t\t* @type {number} ",
                          "start": 973,
                          "end": 1086,
                          "loc": {
                            "start": {
                              "line": 32,
                              "column": 2
                            },
                            "end": {
                              "line": 33,
                              "column": 21
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "ExpressionStatement",
                      "start": 1089,
                      "end": 1111,
                      "loc": {
                        "start": {
                          "line": 34,
                          "column": 2
                        },
                        "end": {
                          "line": 34,
                          "column": 24
                        }
                      },
                      "expression": {
                        "type": "AssignmentExpression",
                        "start": 1089,
                        "end": 1110,
                        "loc": {
                          "start": {
                            "line": 34,
                            "column": 2
                          },
                          "end": {
                            "line": 34,
                            "column": 23
                          }
                        },
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "start": 1089,
                          "end": 1106,
                          "loc": {
                            "start": {
                              "line": 34,
                              "column": 2
                            },
                            "end": {
                              "line": 34,
                              "column": 19
                            }
                          },
                          "object": {
                            "type": "ThisExpression",
                            "start": 1089,
                            "end": 1093,
                            "loc": {
                              "start": {
                                "line": 34,
                                "column": 2
                              },
                              "end": {
                                "line": 34,
                                "column": 6
                              }
                            },
                            "leadingComments": null
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 1094,
                            "end": 1106,
                            "loc": {
                              "start": {
                                "line": 34,
                                "column": 7
                              },
                              "end": {
                                "line": 34,
                                "column": 19
                              },
                              "identifierName": "minesFlagged"
                            },
                            "name": "minesFlagged"
                          },
                          "computed": false,
                          "leadingComments": null
                        },
                        "right": {
                          "type": "NumericLiteral",
                          "start": 1109,
                          "end": 1110,
                          "loc": {
                            "start": {
                              "line": 34,
                              "column": 22
                            },
                            "end": {
                              "line": 34,
                              "column": 23
                            }
                          },
                          "extra": {
                            "rawValue": 0,
                            "raw": "0"
                          },
                          "value": 0
                        },
                        "leadingComments": null
                      },
                      "leadingComments": [
                        {
                          "type": "CommentBlock",
                          "value": "* Number of mines that the user has flagged. Must be equal to minesTotal to win the game.\n\t\t* @type {number} ",
                          "start": 973,
                          "end": 1086,
                          "loc": {
                            "start": {
                              "line": 32,
                              "column": 2
                            },
                            "end": {
                              "line": 33,
                              "column": 21
                            }
                          }
                        }
                      ],
                      "trailingComments": [
                        {
                          "type": "CommentBlock",
                          "value": "* Flag that indicates if the player has won the game.\n\t\t* @type {boolean} ",
                          "start": 1117,
                          "end": 1195,
                          "loc": {
                            "start": {
                              "line": 36,
                              "column": 2
                            },
                            "end": {
                              "line": 37,
                              "column": 22
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "ExpressionStatement",
                      "start": 1198,
                      "end": 1218,
                      "loc": {
                        "start": {
                          "line": 38,
                          "column": 2
                        },
                        "end": {
                          "line": 38,
                          "column": 22
                        }
                      },
                      "expression": {
                        "type": "AssignmentExpression",
                        "start": 1198,
                        "end": 1217,
                        "loc": {
                          "start": {
                            "line": 38,
                            "column": 2
                          },
                          "end": {
                            "line": 38,
                            "column": 21
                          }
                        },
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "start": 1198,
                          "end": 1209,
                          "loc": {
                            "start": {
                              "line": 38,
                              "column": 2
                            },
                            "end": {
                              "line": 38,
                              "column": 13
                            }
                          },
                          "object": {
                            "type": "ThisExpression",
                            "start": 1198,
                            "end": 1202,
                            "loc": {
                              "start": {
                                "line": 38,
                                "column": 2
                              },
                              "end": {
                                "line": 38,
                                "column": 6
                              }
                            },
                            "leadingComments": null
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 1203,
                            "end": 1209,
                            "loc": {
                              "start": {
                                "line": 38,
                                "column": 7
                              },
                              "end": {
                                "line": 38,
                                "column": 13
                              },
                              "identifierName": "winner"
                            },
                            "name": "winner"
                          },
                          "computed": false,
                          "leadingComments": null
                        },
                        "right": {
                          "type": "BooleanLiteral",
                          "start": 1212,
                          "end": 1217,
                          "loc": {
                            "start": {
                              "line": 38,
                              "column": 16
                            },
                            "end": {
                              "line": 38,
                              "column": 21
                            }
                          },
                          "value": false
                        },
                        "leadingComments": null
                      },
                      "leadingComments": [
                        {
                          "type": "CommentBlock",
                          "value": "* Flag that indicates if the player has won the game.\n\t\t* @type {boolean} ",
                          "start": 1117,
                          "end": 1195,
                          "loc": {
                            "start": {
                              "line": 36,
                              "column": 2
                            },
                            "end": {
                              "line": 37,
                              "column": 22
                            }
                          }
                        }
                      ],
                      "trailingComments": [
                        {
                          "type": "CommentBlock",
                          "value": "* Flag that indicates if the player has lost the game.\n\t\t* @type {boolean} ",
                          "start": 1224,
                          "end": 1303,
                          "loc": {
                            "start": {
                              "line": 40,
                              "column": 2
                            },
                            "end": {
                              "line": 41,
                              "column": 22
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "ExpressionStatement",
                      "start": 1306,
                      "end": 1325,
                      "loc": {
                        "start": {
                          "line": 42,
                          "column": 2
                        },
                        "end": {
                          "line": 42,
                          "column": 21
                        }
                      },
                      "expression": {
                        "type": "AssignmentExpression",
                        "start": 1306,
                        "end": 1324,
                        "loc": {
                          "start": {
                            "line": 42,
                            "column": 2
                          },
                          "end": {
                            "line": 42,
                            "column": 20
                          }
                        },
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "start": 1306,
                          "end": 1316,
                          "loc": {
                            "start": {
                              "line": 42,
                              "column": 2
                            },
                            "end": {
                              "line": 42,
                              "column": 12
                            }
                          },
                          "object": {
                            "type": "ThisExpression",
                            "start": 1306,
                            "end": 1310,
                            "loc": {
                              "start": {
                                "line": 42,
                                "column": 2
                              },
                              "end": {
                                "line": 42,
                                "column": 6
                              }
                            },
                            "leadingComments": null
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 1311,
                            "end": 1316,
                            "loc": {
                              "start": {
                                "line": 42,
                                "column": 7
                              },
                              "end": {
                                "line": 42,
                                "column": 12
                              },
                              "identifierName": "loser"
                            },
                            "name": "loser"
                          },
                          "computed": false,
                          "leadingComments": null
                        },
                        "right": {
                          "type": "BooleanLiteral",
                          "start": 1319,
                          "end": 1324,
                          "loc": {
                            "start": {
                              "line": 42,
                              "column": 15
                            },
                            "end": {
                              "line": 42,
                              "column": 20
                            }
                          },
                          "value": false
                        },
                        "leadingComments": null
                      },
                      "leadingComments": [
                        {
                          "type": "CommentBlock",
                          "value": "* Flag that indicates if the player has lost the game.\n\t\t* @type {boolean} ",
                          "start": 1224,
                          "end": 1303,
                          "loc": {
                            "start": {
                              "line": 40,
                              "column": 2
                            },
                            "end": {
                              "line": 41,
                              "column": 22
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "ForStatement",
                      "start": 1331,
                      "end": 1476,
                      "loc": {
                        "start": {
                          "line": 44,
                          "column": 2
                        },
                        "end": {
                          "line": 51,
                          "column": 3
                        }
                      },
                      "init": {
                        "type": "VariableDeclaration",
                        "start": 1335,
                        "end": 1344,
                        "loc": {
                          "start": {
                            "line": 44,
                            "column": 6
                          },
                          "end": {
                            "line": 44,
                            "column": 15
                          }
                        },
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "start": 1339,
                            "end": 1344,
                            "loc": {
                              "start": {
                                "line": 44,
                                "column": 10
                              },
                              "end": {
                                "line": 44,
                                "column": 15
                              }
                            },
                            "id": {
                              "type": "Identifier",
                              "start": 1339,
                              "end": 1340,
                              "loc": {
                                "start": {
                                  "line": 44,
                                  "column": 10
                                },
                                "end": {
                                  "line": 44,
                                  "column": 11
                                },
                                "identifierName": "i"
                              },
                              "name": "i"
                            },
                            "init": {
                              "type": "NumericLiteral",
                              "start": 1343,
                              "end": 1344,
                              "loc": {
                                "start": {
                                  "line": 44,
                                  "column": 14
                                },
                                "end": {
                                  "line": 44,
                                  "column": 15
                                }
                              },
                              "extra": {
                                "rawValue": 0,
                                "raw": "0"
                              },
                              "value": 0
                            }
                          }
                        ],
                        "kind": "let"
                      },
                      "test": {
                        "type": "BinaryExpression",
                        "start": 1346,
                        "end": 1352,
                        "loc": {
                          "start": {
                            "line": 44,
                            "column": 17
                          },
                          "end": {
                            "line": 44,
                            "column": 23
                          }
                        },
                        "left": {
                          "type": "Identifier",
                          "start": 1346,
                          "end": 1347,
                          "loc": {
                            "start": {
                              "line": 44,
                              "column": 17
                            },
                            "end": {
                              "line": 44,
                              "column": 18
                            },
                            "identifierName": "i"
                          },
                          "name": "i"
                        },
                        "operator": "<",
                        "right": {
                          "type": "Identifier",
                          "start": 1348,
                          "end": 1352,
                          "loc": {
                            "start": {
                              "line": 44,
                              "column": 19
                            },
                            "end": {
                              "line": 44,
                              "column": 23
                            },
                            "identifierName": "rows"
                          },
                          "name": "rows"
                        }
                      },
                      "update": {
                        "type": "UpdateExpression",
                        "start": 1354,
                        "end": 1357,
                        "loc": {
                          "start": {
                            "line": 44,
                            "column": 25
                          },
                          "end": {
                            "line": 44,
                            "column": 28
                          }
                        },
                        "operator": "++",
                        "prefix": false,
                        "argument": {
                          "type": "Identifier",
                          "start": 1354,
                          "end": 1355,
                          "loc": {
                            "start": {
                              "line": 44,
                              "column": 25
                            },
                            "end": {
                              "line": 44,
                              "column": 26
                            },
                            "identifierName": "i"
                          },
                          "name": "i"
                        }
                      },
                      "body": {
                        "type": "BlockStatement",
                        "start": 1361,
                        "end": 1476,
                        "loc": {
                          "start": {
                            "line": 45,
                            "column": 2
                          },
                          "end": {
                            "line": 51,
                            "column": 3
                          }
                        },
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "start": 1366,
                            "end": 1377,
                            "loc": {
                              "start": {
                                "line": 46,
                                "column": 3
                              },
                              "end": {
                                "line": 46,
                                "column": 14
                              }
                            },
                            "expression": {
                              "type": "AssignmentExpression",
                              "start": 1366,
                              "end": 1376,
                              "loc": {
                                "start": {
                                  "line": 46,
                                  "column": 3
                                },
                                "end": {
                                  "line": 46,
                                  "column": 13
                                }
                              },
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "start": 1366,
                                "end": 1372,
                                "loc": {
                                  "start": {
                                    "line": 46,
                                    "column": 3
                                  },
                                  "end": {
                                    "line": 46,
                                    "column": 9
                                  }
                                },
                                "object": {
                                  "type": "Identifier",
                                  "start": 1366,
                                  "end": 1369,
                                  "loc": {
                                    "start": {
                                      "line": 46,
                                      "column": 3
                                    },
                                    "end": {
                                      "line": 46,
                                      "column": 6
                                    },
                                    "identifierName": "arr"
                                  },
                                  "name": "arr"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "start": 1370,
                                  "end": 1371,
                                  "loc": {
                                    "start": {
                                      "line": 46,
                                      "column": 7
                                    },
                                    "end": {
                                      "line": 46,
                                      "column": 8
                                    },
                                    "identifierName": "i"
                                  },
                                  "name": "i"
                                },
                                "computed": true
                              },
                              "right": {
                                "type": "ArrayExpression",
                                "start": 1374,
                                "end": 1376,
                                "loc": {
                                  "start": {
                                    "line": 46,
                                    "column": 11
                                  },
                                  "end": {
                                    "line": 46,
                                    "column": 13
                                  }
                                },
                                "elements": []
                              }
                            }
                          },
                          {
                            "type": "ForStatement",
                            "start": 1381,
                            "end": 1472,
                            "loc": {
                              "start": {
                                "line": 47,
                                "column": 3
                              },
                              "end": {
                                "line": 50,
                                "column": 4
                              }
                            },
                            "init": {
                              "type": "VariableDeclaration",
                              "start": 1385,
                              "end": 1394,
                              "loc": {
                                "start": {
                                  "line": 47,
                                  "column": 7
                                },
                                "end": {
                                  "line": 47,
                                  "column": 16
                                }
                              },
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "start": 1389,
                                  "end": 1394,
                                  "loc": {
                                    "start": {
                                      "line": 47,
                                      "column": 11
                                    },
                                    "end": {
                                      "line": 47,
                                      "column": 16
                                    }
                                  },
                                  "id": {
                                    "type": "Identifier",
                                    "start": 1389,
                                    "end": 1390,
                                    "loc": {
                                      "start": {
                                        "line": 47,
                                        "column": 11
                                      },
                                      "end": {
                                        "line": 47,
                                        "column": 12
                                      },
                                      "identifierName": "j"
                                    },
                                    "name": "j"
                                  },
                                  "init": {
                                    "type": "NumericLiteral",
                                    "start": 1393,
                                    "end": 1394,
                                    "loc": {
                                      "start": {
                                        "line": 47,
                                        "column": 15
                                      },
                                      "end": {
                                        "line": 47,
                                        "column": 16
                                      }
                                    },
                                    "extra": {
                                      "rawValue": 0,
                                      "raw": "0"
                                    },
                                    "value": 0
                                  }
                                }
                              ],
                              "kind": "let"
                            },
                            "test": {
                              "type": "BinaryExpression",
                              "start": 1396,
                              "end": 1405,
                              "loc": {
                                "start": {
                                  "line": 47,
                                  "column": 18
                                },
                                "end": {
                                  "line": 47,
                                  "column": 27
                                }
                              },
                              "left": {
                                "type": "Identifier",
                                "start": 1396,
                                "end": 1397,
                                "loc": {
                                  "start": {
                                    "line": 47,
                                    "column": 18
                                  },
                                  "end": {
                                    "line": 47,
                                    "column": 19
                                  },
                                  "identifierName": "j"
                                },
                                "name": "j"
                              },
                              "operator": "<",
                              "right": {
                                "type": "Identifier",
                                "start": 1398,
                                "end": 1405,
                                "loc": {
                                  "start": {
                                    "line": 47,
                                    "column": 20
                                  },
                                  "end": {
                                    "line": 47,
                                    "column": 27
                                  },
                                  "identifierName": "columns"
                                },
                                "name": "columns"
                              }
                            },
                            "update": {
                              "type": "UpdateExpression",
                              "start": 1407,
                              "end": 1410,
                              "loc": {
                                "start": {
                                  "line": 47,
                                  "column": 29
                                },
                                "end": {
                                  "line": 47,
                                  "column": 32
                                }
                              },
                              "operator": "++",
                              "prefix": false,
                              "argument": {
                                "type": "Identifier",
                                "start": 1407,
                                "end": 1408,
                                "loc": {
                                  "start": {
                                    "line": 47,
                                    "column": 29
                                  },
                                  "end": {
                                    "line": 47,
                                    "column": 30
                                  },
                                  "identifierName": "j"
                                },
                                "name": "j"
                              }
                            },
                            "body": {
                              "type": "BlockStatement",
                              "start": 1415,
                              "end": 1472,
                              "loc": {
                                "start": {
                                  "line": 48,
                                  "column": 3
                                },
                                "end": {
                                  "line": 50,
                                  "column": 4
                                }
                              },
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "start": 1421,
                                  "end": 1444,
                                  "loc": {
                                    "start": {
                                      "line": 49,
                                      "column": 4
                                    },
                                    "end": {
                                      "line": 49,
                                      "column": 27
                                    }
                                  },
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "start": 1421,
                                    "end": 1443,
                                    "loc": {
                                      "start": {
                                        "line": 49,
                                        "column": 4
                                      },
                                      "end": {
                                        "line": 49,
                                        "column": 26
                                      }
                                    },
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "start": 1421,
                                      "end": 1430,
                                      "loc": {
                                        "start": {
                                          "line": 49,
                                          "column": 4
                                        },
                                        "end": {
                                          "line": 49,
                                          "column": 13
                                        }
                                      },
                                      "object": {
                                        "type": "MemberExpression",
                                        "start": 1421,
                                        "end": 1427,
                                        "loc": {
                                          "start": {
                                            "line": 49,
                                            "column": 4
                                          },
                                          "end": {
                                            "line": 49,
                                            "column": 10
                                          }
                                        },
                                        "object": {
                                          "type": "Identifier",
                                          "start": 1421,
                                          "end": 1424,
                                          "loc": {
                                            "start": {
                                              "line": 49,
                                              "column": 4
                                            },
                                            "end": {
                                              "line": 49,
                                              "column": 7
                                            },
                                            "identifierName": "arr"
                                          },
                                          "name": "arr"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "start": 1425,
                                          "end": 1426,
                                          "loc": {
                                            "start": {
                                              "line": 49,
                                              "column": 8
                                            },
                                            "end": {
                                              "line": 49,
                                              "column": 9
                                            },
                                            "identifierName": "i"
                                          },
                                          "name": "i"
                                        },
                                        "computed": true
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "start": 1428,
                                        "end": 1429,
                                        "loc": {
                                          "start": {
                                            "line": 49,
                                            "column": 11
                                          },
                                          "end": {
                                            "line": 49,
                                            "column": 12
                                          },
                                          "identifierName": "j"
                                        },
                                        "name": "j"
                                      },
                                      "computed": true
                                    },
                                    "right": {
                                      "type": "NewExpression",
                                      "start": 1433,
                                      "end": 1443,
                                      "loc": {
                                        "start": {
                                          "line": 49,
                                          "column": 16
                                        },
                                        "end": {
                                          "line": 49,
                                          "column": 26
                                        }
                                      },
                                      "callee": {
                                        "type": "Identifier",
                                        "start": 1437,
                                        "end": 1441,
                                        "loc": {
                                          "start": {
                                            "line": 49,
                                            "column": 20
                                          },
                                          "end": {
                                            "line": 49,
                                            "column": 24
                                          },
                                          "identifierName": "Tile"
                                        },
                                        "name": "Tile"
                                      },
                                      "arguments": []
                                    }
                                  },
                                  "trailingComments": [
                                    {
                                      "type": "CommentLine",
                                      "value": " Adding default tiles",
                                      "start": 1444,
                                      "end": 1467,
                                      "loc": {
                                        "start": {
                                          "line": 49,
                                          "column": 27
                                        },
                                        "end": {
                                          "line": 49,
                                          "column": 50
                                        }
                                      }
                                    }
                                  ]
                                }
                              ],
                              "directives": []
                            }
                          }
                        ],
                        "directives": []
                      }
                    }
                  ],
                  "directives": []
                },
                "leadingComments": [
                  {
                    "type": "CommentBlock",
                    "value": "*\n\t* Constructor creates a board, setting all necessary variables and creating a 2D array to store the tiles based on user input.\n\t* @param {number} numMines Number of mines on the board.\n\t* @param {number} rows Number of rows (height) on the board.\n\t* @param {number} columns Number of columns (length) on the board.\n\t",
                    "start": 169,
                    "end": 492,
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 1
                      },
                      "end": {
                        "line": 14,
                        "column": 3
                      }
                    }
                  }
                ]
              },
              {
                "type": "ClassMethod",
                "start": 1483,
                "end": 1877,
                "loc": {
                  "start": {
                    "line": 54,
                    "column": 1
                  },
                  "end": {
                    "line": 66,
                    "column": 2
                  }
                },
                "static": false,
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 1483,
                  "end": 1492,
                  "loc": {
                    "start": {
                      "line": 54,
                      "column": 1
                    },
                    "end": {
                      "line": 54,
                      "column": 10
                    },
                    "identifierName": "plantMine"
                  },
                  "name": "plantMine"
                },
                "kind": "method",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "start": 1495,
                  "end": 1877,
                  "loc": {
                    "start": {
                      "line": 54,
                      "column": 13
                    },
                    "end": {
                      "line": 66,
                      "column": 2
                    }
                  },
                  "body": [
                    {
                      "type": "VariableDeclaration",
                      "start": 1499,
                      "end": 1530,
                      "loc": {
                        "start": {
                          "line": 55,
                          "column": 2
                        },
                        "end": {
                          "line": 55,
                          "column": 33
                        }
                      },
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "start": 1503,
                          "end": 1529,
                          "loc": {
                            "start": {
                              "line": 55,
                              "column": 6
                            },
                            "end": {
                              "line": 55,
                              "column": 32
                            }
                          },
                          "id": {
                            "type": "Identifier",
                            "start": 1503,
                            "end": 1511,
                            "loc": {
                              "start": {
                                "line": 55,
                                "column": 6
                              },
                              "end": {
                                "line": 55,
                                "column": 14
                              },
                              "identifierName": "numMines"
                            },
                            "name": "numMines"
                          },
                          "init": {
                            "type": "MemberExpression",
                            "start": 1514,
                            "end": 1529,
                            "loc": {
                              "start": {
                                "line": 55,
                                "column": 17
                              },
                              "end": {
                                "line": 55,
                                "column": 32
                              }
                            },
                            "object": {
                              "type": "ThisExpression",
                              "start": 1514,
                              "end": 1518,
                              "loc": {
                                "start": {
                                  "line": 55,
                                  "column": 17
                                },
                                "end": {
                                  "line": 55,
                                  "column": 21
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "start": 1519,
                              "end": 1529,
                              "loc": {
                                "start": {
                                  "line": 55,
                                  "column": 22
                                },
                                "end": {
                                  "line": 55,
                                  "column": 32
                                },
                                "identifierName": "minesTotal"
                              },
                              "name": "minesTotal"
                            },
                            "computed": false
                          }
                        }
                      ],
                      "kind": "let"
                    },
                    {
                      "type": "WhileStatement",
                      "start": 1533,
                      "end": 1874,
                      "loc": {
                        "start": {
                          "line": 56,
                          "column": 2
                        },
                        "end": {
                          "line": 65,
                          "column": 3
                        }
                      },
                      "test": {
                        "type": "BinaryExpression",
                        "start": 1539,
                        "end": 1550,
                        "loc": {
                          "start": {
                            "line": 56,
                            "column": 8
                          },
                          "end": {
                            "line": 56,
                            "column": 19
                          }
                        },
                        "left": {
                          "type": "Identifier",
                          "start": 1539,
                          "end": 1547,
                          "loc": {
                            "start": {
                              "line": 56,
                              "column": 8
                            },
                            "end": {
                              "line": 56,
                              "column": 16
                            },
                            "identifierName": "numMines"
                          },
                          "name": "numMines"
                        },
                        "operator": ">",
                        "right": {
                          "type": "NumericLiteral",
                          "start": 1549,
                          "end": 1550,
                          "loc": {
                            "start": {
                              "line": 56,
                              "column": 18
                            },
                            "end": {
                              "line": 56,
                              "column": 19
                            }
                          },
                          "extra": {
                            "rawValue": 0,
                            "raw": "0"
                          },
                          "value": 0
                        }
                      },
                      "body": {
                        "type": "BlockStatement",
                        "start": 1554,
                        "end": 1874,
                        "loc": {
                          "start": {
                            "line": 57,
                            "column": 2
                          },
                          "end": {
                            "line": 65,
                            "column": 3
                          }
                        },
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "start": 1559,
                            "end": 1604,
                            "loc": {
                              "start": {
                                "line": 58,
                                "column": 3
                              },
                              "end": {
                                "line": 58,
                                "column": 48
                              }
                            },
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "start": 1563,
                                "end": 1603,
                                "loc": {
                                  "start": {
                                    "line": 58,
                                    "column": 7
                                  },
                                  "end": {
                                    "line": 58,
                                    "column": 47
                                  }
                                },
                                "id": {
                                  "type": "Identifier",
                                  "start": 1563,
                                  "end": 1564,
                                  "loc": {
                                    "start": {
                                      "line": 58,
                                      "column": 7
                                    },
                                    "end": {
                                      "line": 58,
                                      "column": 8
                                    },
                                    "identifierName": "i"
                                  },
                                  "name": "i"
                                },
                                "init": {
                                  "type": "CallExpression",
                                  "start": 1566,
                                  "end": 1603,
                                  "loc": {
                                    "start": {
                                      "line": 58,
                                      "column": 10
                                    },
                                    "end": {
                                      "line": 58,
                                      "column": 47
                                    }
                                  },
                                  "callee": {
                                    "type": "MemberExpression",
                                    "start": 1566,
                                    "end": 1576,
                                    "loc": {
                                      "start": {
                                        "line": 58,
                                        "column": 10
                                      },
                                      "end": {
                                        "line": 58,
                                        "column": 20
                                      }
                                    },
                                    "object": {
                                      "type": "Identifier",
                                      "start": 1566,
                                      "end": 1570,
                                      "loc": {
                                        "start": {
                                          "line": 58,
                                          "column": 10
                                        },
                                        "end": {
                                          "line": 58,
                                          "column": 14
                                        },
                                        "identifierName": "Math"
                                      },
                                      "name": "Math"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "start": 1571,
                                      "end": 1576,
                                      "loc": {
                                        "start": {
                                          "line": 58,
                                          "column": 15
                                        },
                                        "end": {
                                          "line": 58,
                                          "column": 20
                                        },
                                        "identifierName": "floor"
                                      },
                                      "name": "floor"
                                    },
                                    "computed": false
                                  },
                                  "arguments": [
                                    {
                                      "type": "BinaryExpression",
                                      "start": 1577,
                                      "end": 1602,
                                      "loc": {
                                        "start": {
                                          "line": 58,
                                          "column": 21
                                        },
                                        "end": {
                                          "line": 58,
                                          "column": 46
                                        }
                                      },
                                      "left": {
                                        "type": "CallExpression",
                                        "start": 1577,
                                        "end": 1590,
                                        "loc": {
                                          "start": {
                                            "line": 58,
                                            "column": 21
                                          },
                                          "end": {
                                            "line": 58,
                                            "column": 34
                                          }
                                        },
                                        "callee": {
                                          "type": "MemberExpression",
                                          "start": 1577,
                                          "end": 1588,
                                          "loc": {
                                            "start": {
                                              "line": 58,
                                              "column": 21
                                            },
                                            "end": {
                                              "line": 58,
                                              "column": 32
                                            }
                                          },
                                          "object": {
                                            "type": "Identifier",
                                            "start": 1577,
                                            "end": 1581,
                                            "loc": {
                                              "start": {
                                                "line": 58,
                                                "column": 21
                                              },
                                              "end": {
                                                "line": 58,
                                                "column": 25
                                              },
                                              "identifierName": "Math"
                                            },
                                            "name": "Math"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "start": 1582,
                                            "end": 1588,
                                            "loc": {
                                              "start": {
                                                "line": 58,
                                                "column": 26
                                              },
                                              "end": {
                                                "line": 58,
                                                "column": 32
                                              },
                                              "identifierName": "random"
                                            },
                                            "name": "random"
                                          },
                                          "computed": false
                                        },
                                        "arguments": []
                                      },
                                      "operator": "*",
                                      "right": {
                                        "type": "MemberExpression",
                                        "start": 1593,
                                        "end": 1602,
                                        "loc": {
                                          "start": {
                                            "line": 58,
                                            "column": 37
                                          },
                                          "end": {
                                            "line": 58,
                                            "column": 46
                                          }
                                        },
                                        "object": {
                                          "type": "ThisExpression",
                                          "start": 1593,
                                          "end": 1597,
                                          "loc": {
                                            "start": {
                                              "line": 58,
                                              "column": 37
                                            },
                                            "end": {
                                              "line": 58,
                                              "column": 41
                                            }
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "start": 1598,
                                          "end": 1602,
                                          "loc": {
                                            "start": {
                                              "line": 58,
                                              "column": 42
                                            },
                                            "end": {
                                              "line": 58,
                                              "column": 46
                                            },
                                            "identifierName": "rows"
                                          },
                                          "name": "rows"
                                        },
                                        "computed": false
                                      }
                                    }
                                  ]
                                }
                              }
                            ],
                            "kind": "let",
                            "trailingComments": [
                              {
                                "type": "CommentLine",
                                "value": " Assign random i no larger than numRows",
                                "start": 1605,
                                "end": 1646,
                                "loc": {
                                  "start": {
                                    "line": 58,
                                    "column": 49
                                  },
                                  "end": {
                                    "line": 58,
                                    "column": 90
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "type": "VariableDeclaration",
                            "start": 1650,
                            "end": 1698,
                            "loc": {
                              "start": {
                                "line": 59,
                                "column": 3
                              },
                              "end": {
                                "line": 59,
                                "column": 51
                              }
                            },
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "start": 1654,
                                "end": 1697,
                                "loc": {
                                  "start": {
                                    "line": 59,
                                    "column": 7
                                  },
                                  "end": {
                                    "line": 59,
                                    "column": 50
                                  }
                                },
                                "id": {
                                  "type": "Identifier",
                                  "start": 1654,
                                  "end": 1655,
                                  "loc": {
                                    "start": {
                                      "line": 59,
                                      "column": 7
                                    },
                                    "end": {
                                      "line": 59,
                                      "column": 8
                                    },
                                    "identifierName": "j"
                                  },
                                  "name": "j",
                                  "leadingComments": null
                                },
                                "init": {
                                  "type": "CallExpression",
                                  "start": 1657,
                                  "end": 1697,
                                  "loc": {
                                    "start": {
                                      "line": 59,
                                      "column": 10
                                    },
                                    "end": {
                                      "line": 59,
                                      "column": 50
                                    }
                                  },
                                  "callee": {
                                    "type": "MemberExpression",
                                    "start": 1657,
                                    "end": 1667,
                                    "loc": {
                                      "start": {
                                        "line": 59,
                                        "column": 10
                                      },
                                      "end": {
                                        "line": 59,
                                        "column": 20
                                      }
                                    },
                                    "object": {
                                      "type": "Identifier",
                                      "start": 1657,
                                      "end": 1661,
                                      "loc": {
                                        "start": {
                                          "line": 59,
                                          "column": 10
                                        },
                                        "end": {
                                          "line": 59,
                                          "column": 14
                                        },
                                        "identifierName": "Math"
                                      },
                                      "name": "Math"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "start": 1662,
                                      "end": 1667,
                                      "loc": {
                                        "start": {
                                          "line": 59,
                                          "column": 15
                                        },
                                        "end": {
                                          "line": 59,
                                          "column": 20
                                        },
                                        "identifierName": "floor"
                                      },
                                      "name": "floor"
                                    },
                                    "computed": false
                                  },
                                  "arguments": [
                                    {
                                      "type": "BinaryExpression",
                                      "start": 1668,
                                      "end": 1696,
                                      "loc": {
                                        "start": {
                                          "line": 59,
                                          "column": 21
                                        },
                                        "end": {
                                          "line": 59,
                                          "column": 49
                                        }
                                      },
                                      "left": {
                                        "type": "CallExpression",
                                        "start": 1668,
                                        "end": 1681,
                                        "loc": {
                                          "start": {
                                            "line": 59,
                                            "column": 21
                                          },
                                          "end": {
                                            "line": 59,
                                            "column": 34
                                          }
                                        },
                                        "callee": {
                                          "type": "MemberExpression",
                                          "start": 1668,
                                          "end": 1679,
                                          "loc": {
                                            "start": {
                                              "line": 59,
                                              "column": 21
                                            },
                                            "end": {
                                              "line": 59,
                                              "column": 32
                                            }
                                          },
                                          "object": {
                                            "type": "Identifier",
                                            "start": 1668,
                                            "end": 1672,
                                            "loc": {
                                              "start": {
                                                "line": 59,
                                                "column": 21
                                              },
                                              "end": {
                                                "line": 59,
                                                "column": 25
                                              },
                                              "identifierName": "Math"
                                            },
                                            "name": "Math"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "start": 1673,
                                            "end": 1679,
                                            "loc": {
                                              "start": {
                                                "line": 59,
                                                "column": 26
                                              },
                                              "end": {
                                                "line": 59,
                                                "column": 32
                                              },
                                              "identifierName": "random"
                                            },
                                            "name": "random"
                                          },
                                          "computed": false
                                        },
                                        "arguments": []
                                      },
                                      "operator": "*",
                                      "right": {
                                        "type": "MemberExpression",
                                        "start": 1684,
                                        "end": 1696,
                                        "loc": {
                                          "start": {
                                            "line": 59,
                                            "column": 37
                                          },
                                          "end": {
                                            "line": 59,
                                            "column": 49
                                          }
                                        },
                                        "object": {
                                          "type": "ThisExpression",
                                          "start": 1684,
                                          "end": 1688,
                                          "loc": {
                                            "start": {
                                              "line": 59,
                                              "column": 37
                                            },
                                            "end": {
                                              "line": 59,
                                              "column": 41
                                            }
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "start": 1689,
                                          "end": 1696,
                                          "loc": {
                                            "start": {
                                              "line": 59,
                                              "column": 42
                                            },
                                            "end": {
                                              "line": 59,
                                              "column": 49
                                            },
                                            "identifierName": "columns"
                                          },
                                          "name": "columns"
                                        },
                                        "computed": false
                                      }
                                    }
                                  ]
                                },
                                "leadingComments": null
                              }
                            ],
                            "kind": "let",
                            "leadingComments": [
                              {
                                "type": "CommentLine",
                                "value": " Assign random i no larger than numRows",
                                "start": 1605,
                                "end": 1646,
                                "loc": {
                                  "start": {
                                    "line": 58,
                                    "column": 49
                                  },
                                  "end": {
                                    "line": 58,
                                    "column": 90
                                  }
                                }
                              }
                            ],
                            "trailingComments": [
                              {
                                "type": "CommentLine",
                                "value": " Assign random j no larger than numColumns",
                                "start": 1698,
                                "end": 1742,
                                "loc": {
                                  "start": {
                                    "line": 59,
                                    "column": 51
                                  },
                                  "end": {
                                    "line": 59,
                                    "column": 95
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "type": "IfStatement",
                            "start": 1746,
                            "end": 1870,
                            "loc": {
                              "start": {
                                "line": 60,
                                "column": 3
                              },
                              "end": {
                                "line": 64,
                                "column": 4
                              }
                            },
                            "test": {
                              "type": "BinaryExpression",
                              "start": 1749,
                              "end": 1773,
                              "loc": {
                                "start": {
                                  "line": 60,
                                  "column": 6
                                },
                                "end": {
                                  "line": 60,
                                  "column": 30
                                }
                              },
                              "left": {
                                "type": "MemberExpression",
                                "start": 1749,
                                "end": 1765,
                                "loc": {
                                  "start": {
                                    "line": 60,
                                    "column": 6
                                  },
                                  "end": {
                                    "line": 60,
                                    "column": 22
                                  }
                                },
                                "object": {
                                  "type": "MemberExpression",
                                  "start": 1749,
                                  "end": 1758,
                                  "loc": {
                                    "start": {
                                      "line": 60,
                                      "column": 6
                                    },
                                    "end": {
                                      "line": 60,
                                      "column": 15
                                    }
                                  },
                                  "object": {
                                    "type": "MemberExpression",
                                    "start": 1749,
                                    "end": 1755,
                                    "loc": {
                                      "start": {
                                        "line": 60,
                                        "column": 6
                                      },
                                      "end": {
                                        "line": 60,
                                        "column": 12
                                      }
                                    },
                                    "object": {
                                      "type": "Identifier",
                                      "start": 1749,
                                      "end": 1752,
                                      "loc": {
                                        "start": {
                                          "line": 60,
                                          "column": 6
                                        },
                                        "end": {
                                          "line": 60,
                                          "column": 9
                                        },
                                        "identifierName": "arr"
                                      },
                                      "name": "arr",
                                      "leadingComments": null
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "start": 1753,
                                      "end": 1754,
                                      "loc": {
                                        "start": {
                                          "line": 60,
                                          "column": 10
                                        },
                                        "end": {
                                          "line": 60,
                                          "column": 11
                                        },
                                        "identifierName": "i"
                                      },
                                      "name": "i"
                                    },
                                    "computed": true,
                                    "leadingComments": null
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "start": 1756,
                                    "end": 1757,
                                    "loc": {
                                      "start": {
                                        "line": 60,
                                        "column": 13
                                      },
                                      "end": {
                                        "line": 60,
                                        "column": 14
                                      },
                                      "identifierName": "j"
                                    },
                                    "name": "j"
                                  },
                                  "computed": true,
                                  "leadingComments": null
                                },
                                "property": {
                                  "type": "Identifier",
                                  "start": 1759,
                                  "end": 1765,
                                  "loc": {
                                    "start": {
                                      "line": 60,
                                      "column": 16
                                    },
                                    "end": {
                                      "line": 60,
                                      "column": 22
                                    },
                                    "identifierName": "isMine"
                                  },
                                  "name": "isMine"
                                },
                                "computed": false,
                                "leadingComments": null
                              },
                              "operator": "==",
                              "right": {
                                "type": "BooleanLiteral",
                                "start": 1768,
                                "end": 1773,
                                "loc": {
                                  "start": {
                                    "line": 60,
                                    "column": 25
                                  },
                                  "end": {
                                    "line": 60,
                                    "column": 30
                                  }
                                },
                                "value": false
                              },
                              "leadingComments": null
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "start": 1778,
                              "end": 1870,
                              "loc": {
                                "start": {
                                  "line": 61,
                                  "column": 3
                                },
                                "end": {
                                  "line": 64,
                                  "column": 4
                                }
                              },
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "start": 1784,
                                  "end": 1807,
                                  "loc": {
                                    "start": {
                                      "line": 62,
                                      "column": 4
                                    },
                                    "end": {
                                      "line": 62,
                                      "column": 27
                                    }
                                  },
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "start": 1784,
                                    "end": 1806,
                                    "loc": {
                                      "start": {
                                        "line": 62,
                                        "column": 4
                                      },
                                      "end": {
                                        "line": 62,
                                        "column": 26
                                      }
                                    },
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "start": 1784,
                                      "end": 1800,
                                      "loc": {
                                        "start": {
                                          "line": 62,
                                          "column": 4
                                        },
                                        "end": {
                                          "line": 62,
                                          "column": 20
                                        }
                                      },
                                      "object": {
                                        "type": "MemberExpression",
                                        "start": 1784,
                                        "end": 1793,
                                        "loc": {
                                          "start": {
                                            "line": 62,
                                            "column": 4
                                          },
                                          "end": {
                                            "line": 62,
                                            "column": 13
                                          }
                                        },
                                        "object": {
                                          "type": "MemberExpression",
                                          "start": 1784,
                                          "end": 1790,
                                          "loc": {
                                            "start": {
                                              "line": 62,
                                              "column": 4
                                            },
                                            "end": {
                                              "line": 62,
                                              "column": 10
                                            }
                                          },
                                          "object": {
                                            "type": "Identifier",
                                            "start": 1784,
                                            "end": 1787,
                                            "loc": {
                                              "start": {
                                                "line": 62,
                                                "column": 4
                                              },
                                              "end": {
                                                "line": 62,
                                                "column": 7
                                              },
                                              "identifierName": "arr"
                                            },
                                            "name": "arr"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "start": 1788,
                                            "end": 1789,
                                            "loc": {
                                              "start": {
                                                "line": 62,
                                                "column": 8
                                              },
                                              "end": {
                                                "line": 62,
                                                "column": 9
                                              },
                                              "identifierName": "i"
                                            },
                                            "name": "i"
                                          },
                                          "computed": true
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "start": 1791,
                                          "end": 1792,
                                          "loc": {
                                            "start": {
                                              "line": 62,
                                              "column": 11
                                            },
                                            "end": {
                                              "line": 62,
                                              "column": 12
                                            },
                                            "identifierName": "j"
                                          },
                                          "name": "j"
                                        },
                                        "computed": true
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "start": 1794,
                                        "end": 1800,
                                        "loc": {
                                          "start": {
                                            "line": 62,
                                            "column": 14
                                          },
                                          "end": {
                                            "line": 62,
                                            "column": 20
                                          },
                                          "identifierName": "isMine"
                                        },
                                        "name": "isMine"
                                      },
                                      "computed": false
                                    },
                                    "right": {
                                      "type": "BooleanLiteral",
                                      "start": 1802,
                                      "end": 1806,
                                      "loc": {
                                        "start": {
                                          "line": 62,
                                          "column": 22
                                        },
                                        "end": {
                                          "line": 62,
                                          "column": 26
                                        }
                                      },
                                      "value": true
                                    }
                                  },
                                  "trailingComments": [
                                    {
                                      "type": "CommentLine",
                                      "value": " Reassign mine to equal true",
                                      "start": 1808,
                                      "end": 1838,
                                      "loc": {
                                        "start": {
                                          "line": 62,
                                          "column": 28
                                        },
                                        "end": {
                                          "line": 62,
                                          "column": 58
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "start": 1843,
                                  "end": 1865,
                                  "loc": {
                                    "start": {
                                      "line": 63,
                                      "column": 4
                                    },
                                    "end": {
                                      "line": 63,
                                      "column": 26
                                    }
                                  },
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "start": 1843,
                                    "end": 1864,
                                    "loc": {
                                      "start": {
                                        "line": 63,
                                        "column": 4
                                      },
                                      "end": {
                                        "line": 63,
                                        "column": 25
                                      }
                                    },
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "start": 1843,
                                      "end": 1851,
                                      "loc": {
                                        "start": {
                                          "line": 63,
                                          "column": 4
                                        },
                                        "end": {
                                          "line": 63,
                                          "column": 12
                                        },
                                        "identifierName": "numMines"
                                      },
                                      "name": "numMines",
                                      "leadingComments": null
                                    },
                                    "right": {
                                      "type": "BinaryExpression",
                                      "start": 1853,
                                      "end": 1864,
                                      "loc": {
                                        "start": {
                                          "line": 63,
                                          "column": 14
                                        },
                                        "end": {
                                          "line": 63,
                                          "column": 25
                                        }
                                      },
                                      "left": {
                                        "type": "Identifier",
                                        "start": 1853,
                                        "end": 1861,
                                        "loc": {
                                          "start": {
                                            "line": 63,
                                            "column": 14
                                          },
                                          "end": {
                                            "line": 63,
                                            "column": 22
                                          },
                                          "identifierName": "numMines"
                                        },
                                        "name": "numMines"
                                      },
                                      "operator": "-",
                                      "right": {
                                        "type": "NumericLiteral",
                                        "start": 1863,
                                        "end": 1864,
                                        "loc": {
                                          "start": {
                                            "line": 63,
                                            "column": 24
                                          },
                                          "end": {
                                            "line": 63,
                                            "column": 25
                                          }
                                        },
                                        "extra": {
                                          "rawValue": 1,
                                          "raw": "1"
                                        },
                                        "value": 1
                                      }
                                    },
                                    "leadingComments": null
                                  },
                                  "leadingComments": [
                                    {
                                      "type": "CommentLine",
                                      "value": " Reassign mine to equal true",
                                      "start": 1808,
                                      "end": 1838,
                                      "loc": {
                                        "start": {
                                          "line": 62,
                                          "column": 28
                                        },
                                        "end": {
                                          "line": 62,
                                          "column": 58
                                        }
                                      }
                                    }
                                  ]
                                }
                              ],
                              "directives": []
                            },
                            "alternate": null,
                            "leadingComments": [
                              {
                                "type": "CommentLine",
                                "value": " Assign random j no larger than numColumns",
                                "start": 1698,
                                "end": 1742,
                                "loc": {
                                  "start": {
                                    "line": 59,
                                    "column": 51
                                  },
                                  "end": {
                                    "line": 59,
                                    "column": 95
                                  }
                                }
                              }
                            ]
                          }
                        ],
                        "directives": []
                      }
                    }
                  ],
                  "directives": []
                }
              }
            ],
            "trailingComments": null
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Board class, which stores the game board and all related methods\n * @implements {Tile}\n ",
              "start": 49,
              "end": 146,
              "loc": {
                "start": {
                  "line": 4,
                  "column": 0
                },
                "end": {
                  "line": 7,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "\n\n//This function create an arr, whcih size is based on user input.\n//Parameter: rows, columns.\nfunction createBoard(numMines, rows, columns)  //all int type.\n{\n    var arr = [rows]; //Fixed size 2d arr from user input parameters\n    for(var i = 0; i<rows; i++)\n    {\n        arr[i]= [];\n        for(var j = 0; j<columns; j++)\n        {\n            arr[i][j] = new Tile(false, 9,false,false);// Adding default tiles\n        }\n    }\n    plantMine(arr, numMines, rows, columns);//Call to plantMine which returns arr with mines planted and numMines inserted.\n    return arr;\n}\n\n//This function plant the Mines inside the arr.\n//The Number of Mines are given by player.\n//Using Math.random() to ramdomly plant the Mines.\n//parameter: arr, number of Mine.\nfunction plantMine(arr, numMines, rows, columns)\n{\n\t'use strict';\n    while(numMines> 0)\n    {\n        let i= Math.floor(Math.random() * rows); // Assign random i no larger than numRows\n        let j= Math.floor(Math.random() * columns);// Assign random j no larger than numColumns\n        if(arr[i][j].isMine== false)\n        {\n            arr[i][j].isMine= true; // Reassign mine to equal true\n            numMines= numMines- 1;\n        }\n    }\n    plantAdjNum(arr);// Call to assign adjNum in tiles\n    return arr;\n}\n\n\n\n//This function change each tile's adjNum.\n//parameter: arr.\nfunction plantAdjNum(arr)\n{\n\t'use strict';\n    for (let i = 0; i < arr.length; i++)\n    {\n        for (let j = 0; j < arr[i].length; j++)\n        {\n            if(arr[i][j].isMine == false)\n            {\n                var tempAdjNum= 0;\n                //\"if, elseif\" tiles on the edge of the board so we don't search outside the board. Starting top left and moving clockwise.\n\n                //Top left tile\n                if (i == 0 && j == 0)\n                {\n                    //Right block check.\n                    if (arr[i][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //TopRow && 0<column<arr[j].length-1\n                else if( i == 0 && j > 0 && j < arr[i].length - 1)\n                {\n                    //Right block check.\n                    if (arr[i][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //Top Right tile\n                else if ( i == 0 && j == arr[i].length -1)\n                {\n                    //Lower block check.\n                    if (arr[(i + 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //Right column 0<i<arr[j].length-1\n                else if(i > 0 &&  j == arr[i].length - 1 && i < arr.length - 1)\n                {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //Bottom right tile\n                else if(i == arr.length - 1 && j == arr[i].length - 1)\n                {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //Bottom row 0<j<arr[i].length-1\n                else if(i == arr.length - 1 && j > 0 && j < arr[i].length - 1)\n                {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //Bottom left tile\n                else if(i == arr.length - 1 && j == 0)\n                {\n                    //Upper block check.\n                    if (arr[(i - 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //Left column 0<i<arr[j].length\n                else if(i > 0 && j == 0 && i < arr.length - 1)\n                {\n                    //Upper block check.\n                    if (arr[(i - 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //Every tile inside of the outer rows and columns\n                else if (i > 0 && j > 0 && i < arr.length - 1 && j < arr[i].length - 1)\n                {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                arr[i][j].adjNum= tempAdjNum;\n            }\n        }\n    }\n    return arr;\n}\n\n//This function change one tile's falgged.\n//parameter: arr, row, column.\nfunction setFlag(arr, row, column)\n{\n    if(arr[row][column].flagged== false && arr[row][column].revealed== false)\n    {\n    arr[row][column].flagged= true;\n    }\n    //If they already have flagged and want to remove the flag.\n    else if(arr[row][column].flagged== true && arr[row][column].revealed== false)\n    {\n        document.getElementById(\"demo\").innerHTML = \"What are you doing?  You changed your mind?\";\n        arr[row][column].flagged== false;//Remove flag\n    }\n    return arr;\n}\n\n\n//The is a recursive function.\n//It will execute any one of block on the block been clicked.\n//It will change all the tile's revealed = true, who have number 0.\n//Even the tile set with flagged.\n//parameter:  arr, Game, row(i), column(j).\n\nfunction clickReveal(arr, Game, i, j) {\n    if (arr[i][j].isMine == true) {\n        arr[i][j].revealed = true;\n        Game.isLose = true;             //If the click by player and it was a bomb, the game is over.\n    }\n    else {\n\n        if (arr[i][j].adjNum > 0 && arr[i][j].adjNum < 9) {\n            if (arr[i][j].revealed == false) {\n                arr[i][j].revealed = true;\n                arr[i][j].flagged = false;\n            }\n        }\n        else if (arr[i][j].adjNum == 0) {\n            if (arr[i][j].revealed == false) {\n                arr[i][j].revealed = true;\n                arr[i][j].flagged = false;\n\n                if ((i - 1) > 0 && (j - 1) > 0 && (i + 1) < arr.length && (j + 1) < arr[i].length) {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j - 1));\n                    }\n                    else if (arr[(i - 1)][(j - 1)].adjNum < 9 && arr[(i - 1)][(j - 1)].revealed == false) {\n                        arr[(i - 1)][(j - 1)].revealed = true;\n                        arr[(i - 1)][(j - 1)].flagged = false;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), j);\n                    }\n                    else if (arr[(i - 1)][j].adjNum < 9 && arr[(i - 1)][j].revealed == false) {\n                        arr[(i - 1)][j].revealed = true;\n                        arr[(i - 1)][j].flagged = false;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j + 1));\n                    }\n                    else if (arr[(i - 1)][(j + 1)].adjNum < 9 && arr[(i - 1)][(j + 1)].revealed == false) {\n                        arr[(i - 1)][(j + 1)].revealed = true;\n                        arr[(i - 1)][(j + 1)].flagged = false;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j - 1));\n                    }\n                    else if (arr[i][(j - 1)].adjNum < 9 && arr[i][(j - 1)].revealed == false) {\n                        arr[i][(j - 1)].revealed = true;\n                        arr[i][(j - 1)].flagged = false;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j + 1));\n                    }\n                    else if (arr[i][(j + 1)].adjNum < 9 && arr[i][(j + 1)].revealed == false) {\n                        arr[i][(j + 1)].revealed = true;\n                        arr[i][(j + 1)].flagged = false;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j - 1));\n                    }\n                    else if (arr[(i + 1)][(j - 1)].adjNum < 9 && arr[(i + 1)][(j - 1)].revealed == false) {\n                        arr[(i + 1)][(j - 1)].revealed = true;\n                        arr[(i + 1)][(j - 1)].flagged = false;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), j);\n                    }\n                    else if (arr[(i + 1)][j].adjNum < 9 && arr[(i + 1)][j].revealed == false) {\n                        arr[(i + 1)][j].revealed = true;\n                        arr[(i + 1)][j].flagged = false;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j + 1));\n                    }\n                    else if (arr[(i + 1)][(j + 1)].adjNum < 9 && arr[(i + 1)][(j + 1)].revealed == false) {\n                        arr[(i + 1)][(j + 1)].revealed = true;\n                        arr[(i + 1)][(j + 1)].flagged = false;\n                    }\n                }\n                    //check speical left column without two corner blocks\t\t\t\t\t\t\t//fixed\n                else if (i > 0 && i < arr.length - 1 && j == 0) {\n                    //Upper block check.\n                    if (arr[(i - 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), j);\n                    }\n                    else if (arr[(i - 1)][j].adjNum < 9 && arr[(i - 1)][j].revealed == false) {\n                        arr[(i - 1)][j].revealed = true;\n                        arr[(i - 1)][j].flagged = false;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j + 1));\n                    }\n                    else if (arr[(i - 1)][(j + 1)].adjNum < 9 && arr[(i - 1)][(j + 1)].revealed == false) {\n                        arr[(i - 1)][(j + 1)].revealed = true;\n                        arr[(i - 1)][(j + 1)].flagged = false;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j + 1));\n                    }\n                    else if (arr[i][(j + 1)].adjNum < 9 && arr[i][(j + 1)].revealed == false) {\n                        arr[i][(j + 1)].revealed = true;\n                        arr[i][(j + 1)].flagged = false;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), j);\n                    }\n                    else if (arr[(i + 1)][j].adjNum < 9 && arr[(i + 1)][j].revealed == false) {\n                        arr[(i + 1)][j].revealed = true;\n                        arr[(i + 1)][j].flagged = false;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j + 1));\n                    }\n                }\n                    //check speical Lower row\n                else if (i == arr.length - 1 && j > 0 && j < arr[i].length - 1) \t\t//fixed\n                {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j - 1));\n                    }\n                    else if (arr[(i - 1)][(j - 1)].adjNum < 9 && arr[(i - 1)][(j - 1)].revealed == false) {\n                        arr[(i - 1)][(j - 1)].revealed = true;\n                        arr[(i - 1)][(j - 1)].flagged = false;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), j);\n                    }\n                    else if (arr[(i - 1)][j].adjNum < 9 && arr[(i - 1)][j].revealed == false) {\n                        arr[(i - 1)][j].revealed = true;\n                        arr[(i - 1)][j].flagged = false;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j + 1));\n                    }\n                    else if (arr[(i - 1)][(j + 1)].adjNum < 9 && arr[(i - 1)][(j + 1)].revealed == false) {\n                        arr[(i - 1)][(j + 1)].revealed = true;\n                        arr[(i - 1)][(j + 1)].flagged = false;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j - 1));\n                    }\n                    else if (arr[i][(j - 1)].adjNum < 9 && arr[i][(j - 1)].revealed == false) {\n                        arr[i][(j - 1)].revealed = true;\n                        arr[i][(j - 1)].flagged = false;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j + 1));\n                    }\n                    else if (arr[i][(j + 1)].adjNum < 9 && arr[i][(j + 1)].revealed == false) {\n                        arr[i][(j + 1)].revealed = true;\n                        arr[i][(j + 1)].flagged = false;\n                    }\n                }\n                    //check speical right column\n                else if (i > 0 && i < arr.length - 1 && j == arr[i].length - 1) \t\t\t//fixed\n                {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j - 1));\n                    }\n                    else if (arr[(i - 1)][(j - 1)].adjNum < 9 && arr[(i - 1)][(j - 1)].revealed == false) {\n                        arr[(i - 1)][(j - 1)].revealed = true;\n                        arr[(i - 1)][(j - 1)].flagged = false;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), j);\n                    }\n                    else if (arr[(i - 1)][j].adjNum < 9 && arr[(i - 1)][j].revealed == false) {\n                        arr[(i - 1)][j].revealed = true;\n                        arr[(i - 1)][j].flagged = false;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j - 1));\n                    }\n                    else if (arr[i][(j - 1)].adjNum < 9 && arr[i][(j - 1)].revealed == false) {\n                        arr[i][(j - 1)].revealed = true;\n                        arr[i][(j - 1)].flagged = false;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j - 1));\n                    }\n                    else if (arr[(i + 1)][(j - 1)].adjNum < 9 && arr[(i + 1)][(j - 1)].revealed == false) {\n                        arr[(i + 1)][(j - 1)].revealed = true;\n                        arr[(i + 1)][(j - 1)].flagged = false;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].adjNum == 0) {\n\n                        clickReveal(arr, Game, (i + 1), j);\n                    }\n                    else if (arr[(i + 1)][j].adjNum < 9 && arr[(i + 1)][j].revealed == false) {\n                        arr[(i + 1)][j].revealed = true;\n                        arr[(i + 1)][j].flagged = false;\n                    }\n                }\n                    //check speical Upper row\t\t\t\t\t\t\t\t\t\t\t\t//fixed\n                else if (i == 0 && j > 0 && j < arr[i].length - 1) {\n                    //left block check.\n                    if (arr[i][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j - 1));\n                    }\n                    else if (arr[i][(j - 1)].adjNum < 9 && arr[i][(j - 1)].revealed == false) {\n                        arr[i][(j - 1)].revealed = true;\n                        arr[i][(j - 1)].flagged = false;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j + 1));\n                    }\n                    else if (arr[i][(j + 1)].adjNum < 9 && arr[i][(j + 1)].revealed == false) {\n                        arr[i][(j + 1)].revealed = true;\n                        arr[i][(j + 1)].flagged = false;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j - 1));\n                    }\n                    else if (arr[(i + 1)][(j - 1)].adjNum < 9 && arr[(i + 1)][(j - 1)].revealed == false) {\n                        arr[(i + 1)][(j - 1)].revealed = true;\n                        arr[(i + 1)][(j - 1)].flagged = false;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), j);\n                    }\n                    else if (arr[(i + 1)][j].adjNum < 9 && arr[(i + 1)][j].revealed == false) {\n                        arr[(i + 1)][j].revealed = true;\n                        arr[(i + 1)][j].flagged = false;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j + 1));\n                    }\n                    else if (arr[(i + 1)][(j + 1)].adjNum < 9 && arr[(i + 1)][(j + 1)].revealed == false) {\n                        arr[(i + 1)][(j + 1)].revealed = true;\n                        arr[(i + 1)][(j + 1)].flagged = false;\n                    }\n                }\n                    //Upper left corner\n                else if (i == 0 && j == 0) {\n                    //Right block check.\n                    if (arr[i][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j + 1));\n                    }\n                    else if (arr[i][(j + 1)].adjNum < 9 && arr[i][(j + 1)].revealed == false) {\n                        arr[i][(j + 1)].revealed = true;\n                        arr[i][(j + 1)].flagged = false;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), j);\n                    }\n                    else if (arr[(i + 1)][j].adjNum < 9 && arr[(i + 1)][j].revealed == false) {\n                        arr[(i + 1)][j].revealed = true;\n                        arr[(i + 1)][j].flagged = false;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j + 1));\n                    }\n                    else if (arr[(i + 1)][(j + 1)].adjNum < 9 && arr[(i + 1)][(j + 1)].revealed == false) {\n                        arr[(i + 1)][(j + 1)].revealed = true;\n                        arr[(i + 1)][(j + 1)].flagged = false;\n                    }\n                }\n                    //Upper right corner\n                else if (i == 0 && j == arr[i].length - 1) {\n                    //left block check.\n                    if (arr[i][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j - 1));\n                    }\n                    else if (arr[i][(j - 1)].adjNum < 9 && arr[i][(j - 1)].revealed == false) {\n                        arr[i][(j - 1)].revealed = true;\n                        arr[i][(j - 1)].flagged = false;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j - 1));\n                    }\n                    else if (arr[(i + 1)][(j - 1)].adjNum < 9 && arr[(i + 1)][(j - 1)].revealed == false) {\n                        arr[(i + 1)][(j - 1)].revealed = true;\n                        arr[(i + 1)][(j - 1)].flagged = false;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), j);\n                    }\n                    else if (arr[(i + 1)][j].adjNum < 9 && arr[(i + 1)][j].revealed == false) {\n                        arr[(i + 1)][j].revealed = true;\n                        arr[(i + 1)][j].flagged = false;\n                    }\n                }\n                    //Lower left corner\n                else if (i == arr.length - 1 && j == 0) {\n                    //Upper block check.\n                    if (arr[(i - 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), j);\n                    }\n                    else if (arr[(i - 1)][j].adjNum < 9 && arr[(i - 1)][j].revealed == false) {\n                        arr[(i - 1)][j].revealed = true;\n                        arr[(i - 1)][j].flagged = false;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j + 1));\n                    }\n                    else if (arr[(i - 1)][(j + 1)].adjNum < 9 && arr[(i - 1)][(j + 1)].revealed == false) {\n                        arr[(i - 1)][(j + 1)].revealed = true;\n                        arr[(i - 1)][(j + 1)].flagged = false;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j + 1));\n                    }\n                    else if (arr[i][(j + 1)].adjNum < 9 && arr[i][(j + 1)].revealed == false) {\n                        arr[i][(j + 1)].revealed = true;\n                        arr[i][(j + 1)].flagged = false;\n                    }\n                }\n                    //Lower right corner\n                else if (i == arr.length - 1 && j == arr[i].length - 1) {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j - 1));\n                    }\n                    else if (arr[(i - 1)][(j - 1)].adjNum < 9 && arr[(i - 1)][(j - 1)].revealed == false) {\n                        arr[(i - 1)][(j - 1)].revealed = true;\n                        arr[(i - 1)][(j - 1)].flagged = false;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), j);\n                    }\n                    else if (arr[(i - 1)][j].adjNum < 9 && arr[(i - 1)][j].revealed == false) {\n                        arr[(i - 1)][j].revealed = true;\n                        arr[(i - 1)][j].flagged = false;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j - 1));\n                    }\n                    else if (arr[i][(j - 1)].adjNum < 9 && arr[i][(j - 1)].revealed == false) {\n                        arr[i][(j - 1)].revealed = true;\n                        arr[i][(j - 1)].flagged = false;\n                    }\n                }\n            }\n        }\n    }\n}\n",
              "start": 1881,
              "end": 32411,
              "loc": {
                "start": {
                  "line": 69,
                  "column": 0
                },
                "end": {
                  "line": 759,
                  "column": 2
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Board class, which stores the game board and all related methods\n * @implements {Tile}\n ",
            "start": 49,
            "end": 146,
            "loc": {
              "start": {
                "line": 4,
                "column": 0
              },
              "end": {
                "line": 7,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "\n\n//This function create an arr, whcih size is based on user input.\n//Parameter: rows, columns.\nfunction createBoard(numMines, rows, columns)  //all int type.\n{\n    var arr = [rows]; //Fixed size 2d arr from user input parameters\n    for(var i = 0; i<rows; i++)\n    {\n        arr[i]= [];\n        for(var j = 0; j<columns; j++)\n        {\n            arr[i][j] = new Tile(false, 9,false,false);// Adding default tiles\n        }\n    }\n    plantMine(arr, numMines, rows, columns);//Call to plantMine which returns arr with mines planted and numMines inserted.\n    return arr;\n}\n\n//This function plant the Mines inside the arr.\n//The Number of Mines are given by player.\n//Using Math.random() to ramdomly plant the Mines.\n//parameter: arr, number of Mine.\nfunction plantMine(arr, numMines, rows, columns)\n{\n\t'use strict';\n    while(numMines> 0)\n    {\n        let i= Math.floor(Math.random() * rows); // Assign random i no larger than numRows\n        let j= Math.floor(Math.random() * columns);// Assign random j no larger than numColumns\n        if(arr[i][j].isMine== false)\n        {\n            arr[i][j].isMine= true; // Reassign mine to equal true\n            numMines= numMines- 1;\n        }\n    }\n    plantAdjNum(arr);// Call to assign adjNum in tiles\n    return arr;\n}\n\n\n\n//This function change each tile's adjNum.\n//parameter: arr.\nfunction plantAdjNum(arr)\n{\n\t'use strict';\n    for (let i = 0; i < arr.length; i++)\n    {\n        for (let j = 0; j < arr[i].length; j++)\n        {\n            if(arr[i][j].isMine == false)\n            {\n                var tempAdjNum= 0;\n                //\"if, elseif\" tiles on the edge of the board so we don't search outside the board. Starting top left and moving clockwise.\n\n                //Top left tile\n                if (i == 0 && j == 0)\n                {\n                    //Right block check.\n                    if (arr[i][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //TopRow && 0<column<arr[j].length-1\n                else if( i == 0 && j > 0 && j < arr[i].length - 1)\n                {\n                    //Right block check.\n                    if (arr[i][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //Top Right tile\n                else if ( i == 0 && j == arr[i].length -1)\n                {\n                    //Lower block check.\n                    if (arr[(i + 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //Right column 0<i<arr[j].length-1\n                else if(i > 0 &&  j == arr[i].length - 1 && i < arr.length - 1)\n                {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //Bottom right tile\n                else if(i == arr.length - 1 && j == arr[i].length - 1)\n                {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //Bottom row 0<j<arr[i].length-1\n                else if(i == arr.length - 1 && j > 0 && j < arr[i].length - 1)\n                {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //Bottom left tile\n                else if(i == arr.length - 1 && j == 0)\n                {\n                    //Upper block check.\n                    if (arr[(i - 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //Left column 0<i<arr[j].length\n                else if(i > 0 && j == 0 && i < arr.length - 1)\n                {\n                    //Upper block check.\n                    if (arr[(i - 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //Every tile inside of the outer rows and columns\n                else if (i > 0 && j > 0 && i < arr.length - 1 && j < arr[i].length - 1)\n                {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                arr[i][j].adjNum= tempAdjNum;\n            }\n        }\n    }\n    return arr;\n}\n\n//This function change one tile's falgged.\n//parameter: arr, row, column.\nfunction setFlag(arr, row, column)\n{\n    if(arr[row][column].flagged== false && arr[row][column].revealed== false)\n    {\n    arr[row][column].flagged= true;\n    }\n    //If they already have flagged and want to remove the flag.\n    else if(arr[row][column].flagged== true && arr[row][column].revealed== false)\n    {\n        document.getElementById(\"demo\").innerHTML = \"What are you doing?  You changed your mind?\";\n        arr[row][column].flagged== false;//Remove flag\n    }\n    return arr;\n}\n\n\n//The is a recursive function.\n//It will execute any one of block on the block been clicked.\n//It will change all the tile's revealed = true, who have number 0.\n//Even the tile set with flagged.\n//parameter:  arr, Game, row(i), column(j).\n\nfunction clickReveal(arr, Game, i, j) {\n    if (arr[i][j].isMine == true) {\n        arr[i][j].revealed = true;\n        Game.isLose = true;             //If the click by player and it was a bomb, the game is over.\n    }\n    else {\n\n        if (arr[i][j].adjNum > 0 && arr[i][j].adjNum < 9) {\n            if (arr[i][j].revealed == false) {\n                arr[i][j].revealed = true;\n                arr[i][j].flagged = false;\n            }\n        }\n        else if (arr[i][j].adjNum == 0) {\n            if (arr[i][j].revealed == false) {\n                arr[i][j].revealed = true;\n                arr[i][j].flagged = false;\n\n                if ((i - 1) > 0 && (j - 1) > 0 && (i + 1) < arr.length && (j + 1) < arr[i].length) {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j - 1));\n                    }\n                    else if (arr[(i - 1)][(j - 1)].adjNum < 9 && arr[(i - 1)][(j - 1)].revealed == false) {\n                        arr[(i - 1)][(j - 1)].revealed = true;\n                        arr[(i - 1)][(j - 1)].flagged = false;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), j);\n                    }\n                    else if (arr[(i - 1)][j].adjNum < 9 && arr[(i - 1)][j].revealed == false) {\n                        arr[(i - 1)][j].revealed = true;\n                        arr[(i - 1)][j].flagged = false;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j + 1));\n                    }\n                    else if (arr[(i - 1)][(j + 1)].adjNum < 9 && arr[(i - 1)][(j + 1)].revealed == false) {\n                        arr[(i - 1)][(j + 1)].revealed = true;\n                        arr[(i - 1)][(j + 1)].flagged = false;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j - 1));\n                    }\n                    else if (arr[i][(j - 1)].adjNum < 9 && arr[i][(j - 1)].revealed == false) {\n                        arr[i][(j - 1)].revealed = true;\n                        arr[i][(j - 1)].flagged = false;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j + 1));\n                    }\n                    else if (arr[i][(j + 1)].adjNum < 9 && arr[i][(j + 1)].revealed == false) {\n                        arr[i][(j + 1)].revealed = true;\n                        arr[i][(j + 1)].flagged = false;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j - 1));\n                    }\n                    else if (arr[(i + 1)][(j - 1)].adjNum < 9 && arr[(i + 1)][(j - 1)].revealed == false) {\n                        arr[(i + 1)][(j - 1)].revealed = true;\n                        arr[(i + 1)][(j - 1)].flagged = false;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), j);\n                    }\n                    else if (arr[(i + 1)][j].adjNum < 9 && arr[(i + 1)][j].revealed == false) {\n                        arr[(i + 1)][j].revealed = true;\n                        arr[(i + 1)][j].flagged = false;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j + 1));\n                    }\n                    else if (arr[(i + 1)][(j + 1)].adjNum < 9 && arr[(i + 1)][(j + 1)].revealed == false) {\n                        arr[(i + 1)][(j + 1)].revealed = true;\n                        arr[(i + 1)][(j + 1)].flagged = false;\n                    }\n                }\n                    //check speical left column without two corner blocks\t\t\t\t\t\t\t//fixed\n                else if (i > 0 && i < arr.length - 1 && j == 0) {\n                    //Upper block check.\n                    if (arr[(i - 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), j);\n                    }\n                    else if (arr[(i - 1)][j].adjNum < 9 && arr[(i - 1)][j].revealed == false) {\n                        arr[(i - 1)][j].revealed = true;\n                        arr[(i - 1)][j].flagged = false;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j + 1));\n                    }\n                    else if (arr[(i - 1)][(j + 1)].adjNum < 9 && arr[(i - 1)][(j + 1)].revealed == false) {\n                        arr[(i - 1)][(j + 1)].revealed = true;\n                        arr[(i - 1)][(j + 1)].flagged = false;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j + 1));\n                    }\n                    else if (arr[i][(j + 1)].adjNum < 9 && arr[i][(j + 1)].revealed == false) {\n                        arr[i][(j + 1)].revealed = true;\n                        arr[i][(j + 1)].flagged = false;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), j);\n                    }\n                    else if (arr[(i + 1)][j].adjNum < 9 && arr[(i + 1)][j].revealed == false) {\n                        arr[(i + 1)][j].revealed = true;\n                        arr[(i + 1)][j].flagged = false;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j + 1));\n                    }\n                }\n                    //check speical Lower row\n                else if (i == arr.length - 1 && j > 0 && j < arr[i].length - 1) \t\t//fixed\n                {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j - 1));\n                    }\n                    else if (arr[(i - 1)][(j - 1)].adjNum < 9 && arr[(i - 1)][(j - 1)].revealed == false) {\n                        arr[(i - 1)][(j - 1)].revealed = true;\n                        arr[(i - 1)][(j - 1)].flagged = false;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), j);\n                    }\n                    else if (arr[(i - 1)][j].adjNum < 9 && arr[(i - 1)][j].revealed == false) {\n                        arr[(i - 1)][j].revealed = true;\n                        arr[(i - 1)][j].flagged = false;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j + 1));\n                    }\n                    else if (arr[(i - 1)][(j + 1)].adjNum < 9 && arr[(i - 1)][(j + 1)].revealed == false) {\n                        arr[(i - 1)][(j + 1)].revealed = true;\n                        arr[(i - 1)][(j + 1)].flagged = false;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j - 1));\n                    }\n                    else if (arr[i][(j - 1)].adjNum < 9 && arr[i][(j - 1)].revealed == false) {\n                        arr[i][(j - 1)].revealed = true;\n                        arr[i][(j - 1)].flagged = false;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j + 1));\n                    }\n                    else if (arr[i][(j + 1)].adjNum < 9 && arr[i][(j + 1)].revealed == false) {\n                        arr[i][(j + 1)].revealed = true;\n                        arr[i][(j + 1)].flagged = false;\n                    }\n                }\n                    //check speical right column\n                else if (i > 0 && i < arr.length - 1 && j == arr[i].length - 1) \t\t\t//fixed\n                {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j - 1));\n                    }\n                    else if (arr[(i - 1)][(j - 1)].adjNum < 9 && arr[(i - 1)][(j - 1)].revealed == false) {\n                        arr[(i - 1)][(j - 1)].revealed = true;\n                        arr[(i - 1)][(j - 1)].flagged = false;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), j);\n                    }\n                    else if (arr[(i - 1)][j].adjNum < 9 && arr[(i - 1)][j].revealed == false) {\n                        arr[(i - 1)][j].revealed = true;\n                        arr[(i - 1)][j].flagged = false;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j - 1));\n                    }\n                    else if (arr[i][(j - 1)].adjNum < 9 && arr[i][(j - 1)].revealed == false) {\n                        arr[i][(j - 1)].revealed = true;\n                        arr[i][(j - 1)].flagged = false;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j - 1));\n                    }\n                    else if (arr[(i + 1)][(j - 1)].adjNum < 9 && arr[(i + 1)][(j - 1)].revealed == false) {\n                        arr[(i + 1)][(j - 1)].revealed = true;\n                        arr[(i + 1)][(j - 1)].flagged = false;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].adjNum == 0) {\n\n                        clickReveal(arr, Game, (i + 1), j);\n                    }\n                    else if (arr[(i + 1)][j].adjNum < 9 && arr[(i + 1)][j].revealed == false) {\n                        arr[(i + 1)][j].revealed = true;\n                        arr[(i + 1)][j].flagged = false;\n                    }\n                }\n                    //check speical Upper row\t\t\t\t\t\t\t\t\t\t\t\t//fixed\n                else if (i == 0 && j > 0 && j < arr[i].length - 1) {\n                    //left block check.\n                    if (arr[i][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j - 1));\n                    }\n                    else if (arr[i][(j - 1)].adjNum < 9 && arr[i][(j - 1)].revealed == false) {\n                        arr[i][(j - 1)].revealed = true;\n                        arr[i][(j - 1)].flagged = false;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j + 1));\n                    }\n                    else if (arr[i][(j + 1)].adjNum < 9 && arr[i][(j + 1)].revealed == false) {\n                        arr[i][(j + 1)].revealed = true;\n                        arr[i][(j + 1)].flagged = false;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j - 1));\n                    }\n                    else if (arr[(i + 1)][(j - 1)].adjNum < 9 && arr[(i + 1)][(j - 1)].revealed == false) {\n                        arr[(i + 1)][(j - 1)].revealed = true;\n                        arr[(i + 1)][(j - 1)].flagged = false;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), j);\n                    }\n                    else if (arr[(i + 1)][j].adjNum < 9 && arr[(i + 1)][j].revealed == false) {\n                        arr[(i + 1)][j].revealed = true;\n                        arr[(i + 1)][j].flagged = false;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j + 1));\n                    }\n                    else if (arr[(i + 1)][(j + 1)].adjNum < 9 && arr[(i + 1)][(j + 1)].revealed == false) {\n                        arr[(i + 1)][(j + 1)].revealed = true;\n                        arr[(i + 1)][(j + 1)].flagged = false;\n                    }\n                }\n                    //Upper left corner\n                else if (i == 0 && j == 0) {\n                    //Right block check.\n                    if (arr[i][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j + 1));\n                    }\n                    else if (arr[i][(j + 1)].adjNum < 9 && arr[i][(j + 1)].revealed == false) {\n                        arr[i][(j + 1)].revealed = true;\n                        arr[i][(j + 1)].flagged = false;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), j);\n                    }\n                    else if (arr[(i + 1)][j].adjNum < 9 && arr[(i + 1)][j].revealed == false) {\n                        arr[(i + 1)][j].revealed = true;\n                        arr[(i + 1)][j].flagged = false;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j + 1));\n                    }\n                    else if (arr[(i + 1)][(j + 1)].adjNum < 9 && arr[(i + 1)][(j + 1)].revealed == false) {\n                        arr[(i + 1)][(j + 1)].revealed = true;\n                        arr[(i + 1)][(j + 1)].flagged = false;\n                    }\n                }\n                    //Upper right corner\n                else if (i == 0 && j == arr[i].length - 1) {\n                    //left block check.\n                    if (arr[i][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j - 1));\n                    }\n                    else if (arr[i][(j - 1)].adjNum < 9 && arr[i][(j - 1)].revealed == false) {\n                        arr[i][(j - 1)].revealed = true;\n                        arr[i][(j - 1)].flagged = false;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j - 1));\n                    }\n                    else if (arr[(i + 1)][(j - 1)].adjNum < 9 && arr[(i + 1)][(j - 1)].revealed == false) {\n                        arr[(i + 1)][(j - 1)].revealed = true;\n                        arr[(i + 1)][(j - 1)].flagged = false;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), j);\n                    }\n                    else if (arr[(i + 1)][j].adjNum < 9 && arr[(i + 1)][j].revealed == false) {\n                        arr[(i + 1)][j].revealed = true;\n                        arr[(i + 1)][j].flagged = false;\n                    }\n                }\n                    //Lower left corner\n                else if (i == arr.length - 1 && j == 0) {\n                    //Upper block check.\n                    if (arr[(i - 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), j);\n                    }\n                    else if (arr[(i - 1)][j].adjNum < 9 && arr[(i - 1)][j].revealed == false) {\n                        arr[(i - 1)][j].revealed = true;\n                        arr[(i - 1)][j].flagged = false;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j + 1));\n                    }\n                    else if (arr[(i - 1)][(j + 1)].adjNum < 9 && arr[(i - 1)][(j + 1)].revealed == false) {\n                        arr[(i - 1)][(j + 1)].revealed = true;\n                        arr[(i - 1)][(j + 1)].flagged = false;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j + 1));\n                    }\n                    else if (arr[i][(j + 1)].adjNum < 9 && arr[i][(j + 1)].revealed == false) {\n                        arr[i][(j + 1)].revealed = true;\n                        arr[i][(j + 1)].flagged = false;\n                    }\n                }\n                    //Lower right corner\n                else if (i == arr.length - 1 && j == arr[i].length - 1) {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j - 1));\n                    }\n                    else if (arr[(i - 1)][(j - 1)].adjNum < 9 && arr[(i - 1)][(j - 1)].revealed == false) {\n                        arr[(i - 1)][(j - 1)].revealed = true;\n                        arr[(i - 1)][(j - 1)].flagged = false;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), j);\n                    }\n                    else if (arr[(i - 1)][j].adjNum < 9 && arr[(i - 1)][j].revealed == false) {\n                        arr[(i - 1)][j].revealed = true;\n                        arr[(i - 1)][j].flagged = false;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j - 1));\n                    }\n                    else if (arr[i][(j - 1)].adjNum < 9 && arr[i][(j - 1)].revealed == false) {\n                        arr[i][(j - 1)].revealed = true;\n                        arr[i][(j - 1)].flagged = false;\n                    }\n                }\n            }\n        }\n    }\n}\n",
            "start": 1881,
            "end": 32411,
            "loc": {
              "start": {
                "line": 69,
                "column": 0
              },
              "end": {
                "line": 759,
                "column": 2
              }
            }
          }
        ]
      }
    ],
    "directives": [
      {
        "type": "Directive",
        "start": 0,
        "end": 13,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 13
          }
        },
        "value": {
          "type": "DirectiveLiteral",
          "start": 0,
          "end": 12,
          "loc": {
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 1,
              "column": 12
            }
          },
          "value": "use strict",
          "extra": {
            "raw": "'use strict'",
            "rawValue": "use strict"
          }
        }
      }
    ]
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * Board class, which stores the game board and all related methods\n * @implements {Tile}\n ",
      "start": 49,
      "end": 146,
      "loc": {
        "start": {
          "line": 4,
          "column": 0
        },
        "end": {
          "line": 7,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n\t* Constructor creates a board, setting all necessary variables and creating a 2D array to store the tiles based on user input.\n\t* @param {number} numMines Number of mines on the board.\n\t* @param {number} rows Number of rows (height) on the board.\n\t* @param {number} columns Number of columns (length) on the board.\n\t",
      "start": 169,
      "end": 492,
      "loc": {
        "start": {
          "line": 9,
          "column": 1
        },
        "end": {
          "line": 14,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "* Number of rows (height) on the board. Range: 2-50\n\t\t* @type {number} ",
      "start": 535,
      "end": 610,
      "loc": {
        "start": {
          "line": 16,
          "column": 2
        },
        "end": {
          "line": 17,
          "column": 21
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "* Number of columns (length) on the board. Range: 2-50\n\t\t* @type {number} ",
      "start": 636,
      "end": 714,
      "loc": {
        "start": {
          "line": 20,
          "column": 2
        },
        "end": {
          "line": 21,
          "column": 21
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "* Number of mines on the board. Range: 1-2499 (Depending on board size)\n\t\t* @type {number} ",
      "start": 746,
      "end": 841,
      "loc": {
        "start": {
          "line": 24,
          "column": 2
        },
        "end": {
          "line": 25,
          "column": 21
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "* 2D array storing all tile objects on the board.\n\t\t* @type {Tile[]} ",
      "start": 877,
      "end": 950,
      "loc": {
        "start": {
          "line": 28,
          "column": 2
        },
        "end": {
          "line": 29,
          "column": 21
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "* Number of mines that the user has flagged. Must be equal to minesTotal to win the game.\n\t\t* @type {number} ",
      "start": 973,
      "end": 1086,
      "loc": {
        "start": {
          "line": 32,
          "column": 2
        },
        "end": {
          "line": 33,
          "column": 21
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "* Flag that indicates if the player has won the game.\n\t\t* @type {boolean} ",
      "start": 1117,
      "end": 1195,
      "loc": {
        "start": {
          "line": 36,
          "column": 2
        },
        "end": {
          "line": 37,
          "column": 22
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "* Flag that indicates if the player has lost the game.\n\t\t* @type {boolean} ",
      "start": 1224,
      "end": 1303,
      "loc": {
        "start": {
          "line": 40,
          "column": 2
        },
        "end": {
          "line": 41,
          "column": 22
        }
      }
    },
    {
      "type": "CommentLine",
      "value": " Adding default tiles",
      "start": 1444,
      "end": 1467,
      "loc": {
        "start": {
          "line": 49,
          "column": 27
        },
        "end": {
          "line": 49,
          "column": 50
        }
      }
    },
    {
      "type": "CommentLine",
      "value": " Assign random i no larger than numRows",
      "start": 1605,
      "end": 1646,
      "loc": {
        "start": {
          "line": 58,
          "column": 49
        },
        "end": {
          "line": 58,
          "column": 90
        }
      }
    },
    {
      "type": "CommentLine",
      "value": " Assign random j no larger than numColumns",
      "start": 1698,
      "end": 1742,
      "loc": {
        "start": {
          "line": 59,
          "column": 51
        },
        "end": {
          "line": 59,
          "column": 95
        }
      }
    },
    {
      "type": "CommentLine",
      "value": " Reassign mine to equal true",
      "start": 1808,
      "end": 1838,
      "loc": {
        "start": {
          "line": 62,
          "column": 28
        },
        "end": {
          "line": 62,
          "column": 58
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "\n\n//This function create an arr, whcih size is based on user input.\n//Parameter: rows, columns.\nfunction createBoard(numMines, rows, columns)  //all int type.\n{\n    var arr = [rows]; //Fixed size 2d arr from user input parameters\n    for(var i = 0; i<rows; i++)\n    {\n        arr[i]= [];\n        for(var j = 0; j<columns; j++)\n        {\n            arr[i][j] = new Tile(false, 9,false,false);// Adding default tiles\n        }\n    }\n    plantMine(arr, numMines, rows, columns);//Call to plantMine which returns arr with mines planted and numMines inserted.\n    return arr;\n}\n\n//This function plant the Mines inside the arr.\n//The Number of Mines are given by player.\n//Using Math.random() to ramdomly plant the Mines.\n//parameter: arr, number of Mine.\nfunction plantMine(arr, numMines, rows, columns)\n{\n\t'use strict';\n    while(numMines> 0)\n    {\n        let i= Math.floor(Math.random() * rows); // Assign random i no larger than numRows\n        let j= Math.floor(Math.random() * columns);// Assign random j no larger than numColumns\n        if(arr[i][j].isMine== false)\n        {\n            arr[i][j].isMine= true; // Reassign mine to equal true\n            numMines= numMines- 1;\n        }\n    }\n    plantAdjNum(arr);// Call to assign adjNum in tiles\n    return arr;\n}\n\n\n\n//This function change each tile's adjNum.\n//parameter: arr.\nfunction plantAdjNum(arr)\n{\n\t'use strict';\n    for (let i = 0; i < arr.length; i++)\n    {\n        for (let j = 0; j < arr[i].length; j++)\n        {\n            if(arr[i][j].isMine == false)\n            {\n                var tempAdjNum= 0;\n                //\"if, elseif\" tiles on the edge of the board so we don't search outside the board. Starting top left and moving clockwise.\n\n                //Top left tile\n                if (i == 0 && j == 0)\n                {\n                    //Right block check.\n                    if (arr[i][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //TopRow && 0<column<arr[j].length-1\n                else if( i == 0 && j > 0 && j < arr[i].length - 1)\n                {\n                    //Right block check.\n                    if (arr[i][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //Top Right tile\n                else if ( i == 0 && j == arr[i].length -1)\n                {\n                    //Lower block check.\n                    if (arr[(i + 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //Right column 0<i<arr[j].length-1\n                else if(i > 0 &&  j == arr[i].length - 1 && i < arr.length - 1)\n                {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //Bottom right tile\n                else if(i == arr.length - 1 && j == arr[i].length - 1)\n                {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //Bottom row 0<j<arr[i].length-1\n                else if(i == arr.length - 1 && j > 0 && j < arr[i].length - 1)\n                {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //Bottom left tile\n                else if(i == arr.length - 1 && j == 0)\n                {\n                    //Upper block check.\n                    if (arr[(i - 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //Left column 0<i<arr[j].length\n                else if(i > 0 && j == 0 && i < arr.length - 1)\n                {\n                    //Upper block check.\n                    if (arr[(i - 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //Every tile inside of the outer rows and columns\n                else if (i > 0 && j > 0 && i < arr.length - 1 && j < arr[i].length - 1)\n                {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                arr[i][j].adjNum= tempAdjNum;\n            }\n        }\n    }\n    return arr;\n}\n\n//This function change one tile's falgged.\n//parameter: arr, row, column.\nfunction setFlag(arr, row, column)\n{\n    if(arr[row][column].flagged== false && arr[row][column].revealed== false)\n    {\n    arr[row][column].flagged= true;\n    }\n    //If they already have flagged and want to remove the flag.\n    else if(arr[row][column].flagged== true && arr[row][column].revealed== false)\n    {\n        document.getElementById(\"demo\").innerHTML = \"What are you doing?  You changed your mind?\";\n        arr[row][column].flagged== false;//Remove flag\n    }\n    return arr;\n}\n\n\n//The is a recursive function.\n//It will execute any one of block on the block been clicked.\n//It will change all the tile's revealed = true, who have number 0.\n//Even the tile set with flagged.\n//parameter:  arr, Game, row(i), column(j).\n\nfunction clickReveal(arr, Game, i, j) {\n    if (arr[i][j].isMine == true) {\n        arr[i][j].revealed = true;\n        Game.isLose = true;             //If the click by player and it was a bomb, the game is over.\n    }\n    else {\n\n        if (arr[i][j].adjNum > 0 && arr[i][j].adjNum < 9) {\n            if (arr[i][j].revealed == false) {\n                arr[i][j].revealed = true;\n                arr[i][j].flagged = false;\n            }\n        }\n        else if (arr[i][j].adjNum == 0) {\n            if (arr[i][j].revealed == false) {\n                arr[i][j].revealed = true;\n                arr[i][j].flagged = false;\n\n                if ((i - 1) > 0 && (j - 1) > 0 && (i + 1) < arr.length && (j + 1) < arr[i].length) {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j - 1));\n                    }\n                    else if (arr[(i - 1)][(j - 1)].adjNum < 9 && arr[(i - 1)][(j - 1)].revealed == false) {\n                        arr[(i - 1)][(j - 1)].revealed = true;\n                        arr[(i - 1)][(j - 1)].flagged = false;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), j);\n                    }\n                    else if (arr[(i - 1)][j].adjNum < 9 && arr[(i - 1)][j].revealed == false) {\n                        arr[(i - 1)][j].revealed = true;\n                        arr[(i - 1)][j].flagged = false;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j + 1));\n                    }\n                    else if (arr[(i - 1)][(j + 1)].adjNum < 9 && arr[(i - 1)][(j + 1)].revealed == false) {\n                        arr[(i - 1)][(j + 1)].revealed = true;\n                        arr[(i - 1)][(j + 1)].flagged = false;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j - 1));\n                    }\n                    else if (arr[i][(j - 1)].adjNum < 9 && arr[i][(j - 1)].revealed == false) {\n                        arr[i][(j - 1)].revealed = true;\n                        arr[i][(j - 1)].flagged = false;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j + 1));\n                    }\n                    else if (arr[i][(j + 1)].adjNum < 9 && arr[i][(j + 1)].revealed == false) {\n                        arr[i][(j + 1)].revealed = true;\n                        arr[i][(j + 1)].flagged = false;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j - 1));\n                    }\n                    else if (arr[(i + 1)][(j - 1)].adjNum < 9 && arr[(i + 1)][(j - 1)].revealed == false) {\n                        arr[(i + 1)][(j - 1)].revealed = true;\n                        arr[(i + 1)][(j - 1)].flagged = false;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), j);\n                    }\n                    else if (arr[(i + 1)][j].adjNum < 9 && arr[(i + 1)][j].revealed == false) {\n                        arr[(i + 1)][j].revealed = true;\n                        arr[(i + 1)][j].flagged = false;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j + 1));\n                    }\n                    else if (arr[(i + 1)][(j + 1)].adjNum < 9 && arr[(i + 1)][(j + 1)].revealed == false) {\n                        arr[(i + 1)][(j + 1)].revealed = true;\n                        arr[(i + 1)][(j + 1)].flagged = false;\n                    }\n                }\n                    //check speical left column without two corner blocks\t\t\t\t\t\t\t//fixed\n                else if (i > 0 && i < arr.length - 1 && j == 0) {\n                    //Upper block check.\n                    if (arr[(i - 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), j);\n                    }\n                    else if (arr[(i - 1)][j].adjNum < 9 && arr[(i - 1)][j].revealed == false) {\n                        arr[(i - 1)][j].revealed = true;\n                        arr[(i - 1)][j].flagged = false;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j + 1));\n                    }\n                    else if (arr[(i - 1)][(j + 1)].adjNum < 9 && arr[(i - 1)][(j + 1)].revealed == false) {\n                        arr[(i - 1)][(j + 1)].revealed = true;\n                        arr[(i - 1)][(j + 1)].flagged = false;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j + 1));\n                    }\n                    else if (arr[i][(j + 1)].adjNum < 9 && arr[i][(j + 1)].revealed == false) {\n                        arr[i][(j + 1)].revealed = true;\n                        arr[i][(j + 1)].flagged = false;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), j);\n                    }\n                    else if (arr[(i + 1)][j].adjNum < 9 && arr[(i + 1)][j].revealed == false) {\n                        arr[(i + 1)][j].revealed = true;\n                        arr[(i + 1)][j].flagged = false;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j + 1));\n                    }\n                }\n                    //check speical Lower row\n                else if (i == arr.length - 1 && j > 0 && j < arr[i].length - 1) \t\t//fixed\n                {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j - 1));\n                    }\n                    else if (arr[(i - 1)][(j - 1)].adjNum < 9 && arr[(i - 1)][(j - 1)].revealed == false) {\n                        arr[(i - 1)][(j - 1)].revealed = true;\n                        arr[(i - 1)][(j - 1)].flagged = false;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), j);\n                    }\n                    else if (arr[(i - 1)][j].adjNum < 9 && arr[(i - 1)][j].revealed == false) {\n                        arr[(i - 1)][j].revealed = true;\n                        arr[(i - 1)][j].flagged = false;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j + 1));\n                    }\n                    else if (arr[(i - 1)][(j + 1)].adjNum < 9 && arr[(i - 1)][(j + 1)].revealed == false) {\n                        arr[(i - 1)][(j + 1)].revealed = true;\n                        arr[(i - 1)][(j + 1)].flagged = false;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j - 1));\n                    }\n                    else if (arr[i][(j - 1)].adjNum < 9 && arr[i][(j - 1)].revealed == false) {\n                        arr[i][(j - 1)].revealed = true;\n                        arr[i][(j - 1)].flagged = false;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j + 1));\n                    }\n                    else if (arr[i][(j + 1)].adjNum < 9 && arr[i][(j + 1)].revealed == false) {\n                        arr[i][(j + 1)].revealed = true;\n                        arr[i][(j + 1)].flagged = false;\n                    }\n                }\n                    //check speical right column\n                else if (i > 0 && i < arr.length - 1 && j == arr[i].length - 1) \t\t\t//fixed\n                {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j - 1));\n                    }\n                    else if (arr[(i - 1)][(j - 1)].adjNum < 9 && arr[(i - 1)][(j - 1)].revealed == false) {\n                        arr[(i - 1)][(j - 1)].revealed = true;\n                        arr[(i - 1)][(j - 1)].flagged = false;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), j);\n                    }\n                    else if (arr[(i - 1)][j].adjNum < 9 && arr[(i - 1)][j].revealed == false) {\n                        arr[(i - 1)][j].revealed = true;\n                        arr[(i - 1)][j].flagged = false;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j - 1));\n                    }\n                    else if (arr[i][(j - 1)].adjNum < 9 && arr[i][(j - 1)].revealed == false) {\n                        arr[i][(j - 1)].revealed = true;\n                        arr[i][(j - 1)].flagged = false;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j - 1));\n                    }\n                    else if (arr[(i + 1)][(j - 1)].adjNum < 9 && arr[(i + 1)][(j - 1)].revealed == false) {\n                        arr[(i + 1)][(j - 1)].revealed = true;\n                        arr[(i + 1)][(j - 1)].flagged = false;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].adjNum == 0) {\n\n                        clickReveal(arr, Game, (i + 1), j);\n                    }\n                    else if (arr[(i + 1)][j].adjNum < 9 && arr[(i + 1)][j].revealed == false) {\n                        arr[(i + 1)][j].revealed = true;\n                        arr[(i + 1)][j].flagged = false;\n                    }\n                }\n                    //check speical Upper row\t\t\t\t\t\t\t\t\t\t\t\t//fixed\n                else if (i == 0 && j > 0 && j < arr[i].length - 1) {\n                    //left block check.\n                    if (arr[i][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j - 1));\n                    }\n                    else if (arr[i][(j - 1)].adjNum < 9 && arr[i][(j - 1)].revealed == false) {\n                        arr[i][(j - 1)].revealed = true;\n                        arr[i][(j - 1)].flagged = false;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j + 1));\n                    }\n                    else if (arr[i][(j + 1)].adjNum < 9 && arr[i][(j + 1)].revealed == false) {\n                        arr[i][(j + 1)].revealed = true;\n                        arr[i][(j + 1)].flagged = false;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j - 1));\n                    }\n                    else if (arr[(i + 1)][(j - 1)].adjNum < 9 && arr[(i + 1)][(j - 1)].revealed == false) {\n                        arr[(i + 1)][(j - 1)].revealed = true;\n                        arr[(i + 1)][(j - 1)].flagged = false;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), j);\n                    }\n                    else if (arr[(i + 1)][j].adjNum < 9 && arr[(i + 1)][j].revealed == false) {\n                        arr[(i + 1)][j].revealed = true;\n                        arr[(i + 1)][j].flagged = false;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j + 1));\n                    }\n                    else if (arr[(i + 1)][(j + 1)].adjNum < 9 && arr[(i + 1)][(j + 1)].revealed == false) {\n                        arr[(i + 1)][(j + 1)].revealed = true;\n                        arr[(i + 1)][(j + 1)].flagged = false;\n                    }\n                }\n                    //Upper left corner\n                else if (i == 0 && j == 0) {\n                    //Right block check.\n                    if (arr[i][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j + 1));\n                    }\n                    else if (arr[i][(j + 1)].adjNum < 9 && arr[i][(j + 1)].revealed == false) {\n                        arr[i][(j + 1)].revealed = true;\n                        arr[i][(j + 1)].flagged = false;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), j);\n                    }\n                    else if (arr[(i + 1)][j].adjNum < 9 && arr[(i + 1)][j].revealed == false) {\n                        arr[(i + 1)][j].revealed = true;\n                        arr[(i + 1)][j].flagged = false;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j + 1));\n                    }\n                    else if (arr[(i + 1)][(j + 1)].adjNum < 9 && arr[(i + 1)][(j + 1)].revealed == false) {\n                        arr[(i + 1)][(j + 1)].revealed = true;\n                        arr[(i + 1)][(j + 1)].flagged = false;\n                    }\n                }\n                    //Upper right corner\n                else if (i == 0 && j == arr[i].length - 1) {\n                    //left block check.\n                    if (arr[i][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j - 1));\n                    }\n                    else if (arr[i][(j - 1)].adjNum < 9 && arr[i][(j - 1)].revealed == false) {\n                        arr[i][(j - 1)].revealed = true;\n                        arr[i][(j - 1)].flagged = false;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j - 1));\n                    }\n                    else if (arr[(i + 1)][(j - 1)].adjNum < 9 && arr[(i + 1)][(j - 1)].revealed == false) {\n                        arr[(i + 1)][(j - 1)].revealed = true;\n                        arr[(i + 1)][(j - 1)].flagged = false;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), j);\n                    }\n                    else if (arr[(i + 1)][j].adjNum < 9 && arr[(i + 1)][j].revealed == false) {\n                        arr[(i + 1)][j].revealed = true;\n                        arr[(i + 1)][j].flagged = false;\n                    }\n                }\n                    //Lower left corner\n                else if (i == arr.length - 1 && j == 0) {\n                    //Upper block check.\n                    if (arr[(i - 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), j);\n                    }\n                    else if (arr[(i - 1)][j].adjNum < 9 && arr[(i - 1)][j].revealed == false) {\n                        arr[(i - 1)][j].revealed = true;\n                        arr[(i - 1)][j].flagged = false;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j + 1));\n                    }\n                    else if (arr[(i - 1)][(j + 1)].adjNum < 9 && arr[(i - 1)][(j + 1)].revealed == false) {\n                        arr[(i - 1)][(j + 1)].revealed = true;\n                        arr[(i - 1)][(j + 1)].flagged = false;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j + 1));\n                    }\n                    else if (arr[i][(j + 1)].adjNum < 9 && arr[i][(j + 1)].revealed == false) {\n                        arr[i][(j + 1)].revealed = true;\n                        arr[i][(j + 1)].flagged = false;\n                    }\n                }\n                    //Lower right corner\n                else if (i == arr.length - 1 && j == arr[i].length - 1) {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j - 1));\n                    }\n                    else if (arr[(i - 1)][(j - 1)].adjNum < 9 && arr[(i - 1)][(j - 1)].revealed == false) {\n                        arr[(i - 1)][(j - 1)].revealed = true;\n                        arr[(i - 1)][(j - 1)].flagged = false;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), j);\n                    }\n                    else if (arr[(i - 1)][j].adjNum < 9 && arr[(i - 1)][j].revealed == false) {\n                        arr[(i - 1)][j].revealed = true;\n                        arr[(i - 1)][j].flagged = false;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j - 1));\n                    }\n                    else if (arr[i][(j - 1)].adjNum < 9 && arr[i][(j - 1)].revealed == false) {\n                        arr[i][(j - 1)].revealed = true;\n                        arr[i][(j - 1)].flagged = false;\n                    }\n                }\n            }\n        }\n    }\n}\n",
      "start": 1881,
      "end": 32411,
      "loc": {
        "start": {
          "line": 69,
          "column": 0
        },
        "end": {
          "line": 759,
          "column": 2
        }
      }
    }
  ],
  "tokens": [
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "use strict",
      "start": 0,
      "end": 12,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 12,
      "end": 13,
      "loc": {
        "start": {
          "line": 1,
          "column": 12
        },
        "end": {
          "line": 1,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 14,
      "end": 20,
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 2,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 21,
      "end": 22,
      "loc": {
        "start": {
          "line": 2,
          "column": 7
        },
        "end": {
          "line": 2,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Tile",
      "start": 23,
      "end": 27,
      "loc": {
        "start": {
          "line": 2,
          "column": 9
        },
        "end": {
          "line": 2,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 28,
      "end": 29,
      "loc": {
        "start": {
          "line": 2,
          "column": 14
        },
        "end": {
          "line": 2,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 30,
      "end": 34,
      "loc": {
        "start": {
          "line": 2,
          "column": 16
        },
        "end": {
          "line": 2,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "./tile.js",
      "start": 35,
      "end": 46,
      "loc": {
        "start": {
          "line": 2,
          "column": 21
        },
        "end": {
          "line": 2,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 46,
      "end": 47,
      "loc": {
        "start": {
          "line": 2,
          "column": 32
        },
        "end": {
          "line": 2,
          "column": 33
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Board class, which stores the game board and all related methods\n * @implements {Tile}\n ",
      "start": 49,
      "end": 146,
      "loc": {
        "start": {
          "line": 4,
          "column": 0
        },
        "end": {
          "line": 7,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 147,
      "end": 153,
      "loc": {
        "start": {
          "line": 8,
          "column": 0
        },
        "end": {
          "line": 8,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "class",
        "keyword": "class",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "class",
      "start": 154,
      "end": 159,
      "loc": {
        "start": {
          "line": 8,
          "column": 7
        },
        "end": {
          "line": 8,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Board",
      "start": 160,
      "end": 165,
      "loc": {
        "start": {
          "line": 8,
          "column": 13
        },
        "end": {
          "line": 8,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 166,
      "end": 167,
      "loc": {
        "start": {
          "line": 8,
          "column": 19
        },
        "end": {
          "line": 8,
          "column": 20
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n\t* Constructor creates a board, setting all necessary variables and creating a 2D array to store the tiles based on user input.\n\t* @param {number} numMines Number of mines on the board.\n\t* @param {number} rows Number of rows (height) on the board.\n\t* @param {number} columns Number of columns (length) on the board.\n\t",
      "start": 169,
      "end": 492,
      "loc": {
        "start": {
          "line": 9,
          "column": 1
        },
        "end": {
          "line": 14,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "constructor",
      "start": 494,
      "end": 505,
      "loc": {
        "start": {
          "line": 15,
          "column": 1
        },
        "end": {
          "line": 15,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 505,
      "end": 506,
      "loc": {
        "start": {
          "line": 15,
          "column": 12
        },
        "end": {
          "line": 15,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "numMines",
      "start": 506,
      "end": 514,
      "loc": {
        "start": {
          "line": 15,
          "column": 13
        },
        "end": {
          "line": 15,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 514,
      "end": 515,
      "loc": {
        "start": {
          "line": 15,
          "column": 21
        },
        "end": {
          "line": 15,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "rows",
      "start": 516,
      "end": 520,
      "loc": {
        "start": {
          "line": 15,
          "column": 23
        },
        "end": {
          "line": 15,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 520,
      "end": 521,
      "loc": {
        "start": {
          "line": 15,
          "column": 27
        },
        "end": {
          "line": 15,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "columns",
      "start": 522,
      "end": 529,
      "loc": {
        "start": {
          "line": 15,
          "column": 29
        },
        "end": {
          "line": 15,
          "column": 36
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 529,
      "end": 530,
      "loc": {
        "start": {
          "line": 15,
          "column": 36
        },
        "end": {
          "line": 15,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 531,
      "end": 532,
      "loc": {
        "start": {
          "line": 15,
          "column": 38
        },
        "end": {
          "line": 15,
          "column": 39
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "* Number of rows (height) on the board. Range: 2-50\n\t\t* @type {number} ",
      "start": 535,
      "end": 610,
      "loc": {
        "start": {
          "line": 16,
          "column": 2
        },
        "end": {
          "line": 17,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "this",
        "keyword": "this",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "this",
      "start": 613,
      "end": 617,
      "loc": {
        "start": {
          "line": 18,
          "column": 2
        },
        "end": {
          "line": 18,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 617,
      "end": 618,
      "loc": {
        "start": {
          "line": 18,
          "column": 6
        },
        "end": {
          "line": 18,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "rows",
      "start": 618,
      "end": 622,
      "loc": {
        "start": {
          "line": 18,
          "column": 7
        },
        "end": {
          "line": 18,
          "column": 11
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 623,
      "end": 624,
      "loc": {
        "start": {
          "line": 18,
          "column": 12
        },
        "end": {
          "line": 18,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "rows",
      "start": 625,
      "end": 629,
      "loc": {
        "start": {
          "line": 18,
          "column": 14
        },
        "end": {
          "line": 18,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 629,
      "end": 630,
      "loc": {
        "start": {
          "line": 18,
          "column": 18
        },
        "end": {
          "line": 18,
          "column": 19
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "* Number of columns (length) on the board. Range: 2-50\n\t\t* @type {number} ",
      "start": 636,
      "end": 714,
      "loc": {
        "start": {
          "line": 20,
          "column": 2
        },
        "end": {
          "line": 21,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "this",
        "keyword": "this",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "this",
      "start": 717,
      "end": 721,
      "loc": {
        "start": {
          "line": 22,
          "column": 2
        },
        "end": {
          "line": 22,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 721,
      "end": 722,
      "loc": {
        "start": {
          "line": 22,
          "column": 6
        },
        "end": {
          "line": 22,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "columns",
      "start": 722,
      "end": 729,
      "loc": {
        "start": {
          "line": 22,
          "column": 7
        },
        "end": {
          "line": 22,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 730,
      "end": 731,
      "loc": {
        "start": {
          "line": 22,
          "column": 15
        },
        "end": {
          "line": 22,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "columns",
      "start": 732,
      "end": 739,
      "loc": {
        "start": {
          "line": 22,
          "column": 17
        },
        "end": {
          "line": 22,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 739,
      "end": 740,
      "loc": {
        "start": {
          "line": 22,
          "column": 24
        },
        "end": {
          "line": 22,
          "column": 25
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "* Number of mines on the board. Range: 1-2499 (Depending on board size)\n\t\t* @type {number} ",
      "start": 746,
      "end": 841,
      "loc": {
        "start": {
          "line": 24,
          "column": 2
        },
        "end": {
          "line": 25,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "this",
        "keyword": "this",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "this",
      "start": 844,
      "end": 848,
      "loc": {
        "start": {
          "line": 26,
          "column": 2
        },
        "end": {
          "line": 26,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 848,
      "end": 849,
      "loc": {
        "start": {
          "line": 26,
          "column": 6
        },
        "end": {
          "line": 26,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "minesTotal",
      "start": 849,
      "end": 859,
      "loc": {
        "start": {
          "line": 26,
          "column": 7
        },
        "end": {
          "line": 26,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 860,
      "end": 861,
      "loc": {
        "start": {
          "line": 26,
          "column": 18
        },
        "end": {
          "line": 26,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "numMines",
      "start": 862,
      "end": 870,
      "loc": {
        "start": {
          "line": 26,
          "column": 20
        },
        "end": {
          "line": 26,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 870,
      "end": 871,
      "loc": {
        "start": {
          "line": 26,
          "column": 28
        },
        "end": {
          "line": 26,
          "column": 29
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "* 2D array storing all tile objects on the board.\n\t\t* @type {Tile[]} ",
      "start": 877,
      "end": 950,
      "loc": {
        "start": {
          "line": 28,
          "column": 2
        },
        "end": {
          "line": 29,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "this",
        "keyword": "this",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "this",
      "start": 953,
      "end": 957,
      "loc": {
        "start": {
          "line": 30,
          "column": 2
        },
        "end": {
          "line": 30,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 957,
      "end": 958,
      "loc": {
        "start": {
          "line": 30,
          "column": 6
        },
        "end": {
          "line": 30,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "arr",
      "start": 958,
      "end": 961,
      "loc": {
        "start": {
          "line": 30,
          "column": 7
        },
        "end": {
          "line": 30,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 962,
      "end": 963,
      "loc": {
        "start": {
          "line": 30,
          "column": 11
        },
        "end": {
          "line": 30,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "[",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 964,
      "end": 965,
      "loc": {
        "start": {
          "line": 30,
          "column": 13
        },
        "end": {
          "line": 30,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "]",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 965,
      "end": 966,
      "loc": {
        "start": {
          "line": 30,
          "column": 14
        },
        "end": {
          "line": 30,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 966,
      "end": 967,
      "loc": {
        "start": {
          "line": 30,
          "column": 15
        },
        "end": {
          "line": 30,
          "column": 16
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "* Number of mines that the user has flagged. Must be equal to minesTotal to win the game.\n\t\t* @type {number} ",
      "start": 973,
      "end": 1086,
      "loc": {
        "start": {
          "line": 32,
          "column": 2
        },
        "end": {
          "line": 33,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "this",
        "keyword": "this",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "this",
      "start": 1089,
      "end": 1093,
      "loc": {
        "start": {
          "line": 34,
          "column": 2
        },
        "end": {
          "line": 34,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1093,
      "end": 1094,
      "loc": {
        "start": {
          "line": 34,
          "column": 6
        },
        "end": {
          "line": 34,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "minesFlagged",
      "start": 1094,
      "end": 1106,
      "loc": {
        "start": {
          "line": 34,
          "column": 7
        },
        "end": {
          "line": 34,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 1107,
      "end": 1108,
      "loc": {
        "start": {
          "line": 34,
          "column": 20
        },
        "end": {
          "line": 34,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "num",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": 0,
      "start": 1109,
      "end": 1110,
      "loc": {
        "start": {
          "line": 34,
          "column": 22
        },
        "end": {
          "line": 34,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1110,
      "end": 1111,
      "loc": {
        "start": {
          "line": 34,
          "column": 23
        },
        "end": {
          "line": 34,
          "column": 24
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "* Flag that indicates if the player has won the game.\n\t\t* @type {boolean} ",
      "start": 1117,
      "end": 1195,
      "loc": {
        "start": {
          "line": 36,
          "column": 2
        },
        "end": {
          "line": 37,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "this",
        "keyword": "this",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "this",
      "start": 1198,
      "end": 1202,
      "loc": {
        "start": {
          "line": 38,
          "column": 2
        },
        "end": {
          "line": 38,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1202,
      "end": 1203,
      "loc": {
        "start": {
          "line": 38,
          "column": 6
        },
        "end": {
          "line": 38,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "winner",
      "start": 1203,
      "end": 1209,
      "loc": {
        "start": {
          "line": 38,
          "column": 7
        },
        "end": {
          "line": 38,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 1210,
      "end": 1211,
      "loc": {
        "start": {
          "line": 38,
          "column": 14
        },
        "end": {
          "line": 38,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "false",
        "keyword": "false",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "false",
      "start": 1212,
      "end": 1217,
      "loc": {
        "start": {
          "line": 38,
          "column": 16
        },
        "end": {
          "line": 38,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1217,
      "end": 1218,
      "loc": {
        "start": {
          "line": 38,
          "column": 21
        },
        "end": {
          "line": 38,
          "column": 22
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "* Flag that indicates if the player has lost the game.\n\t\t* @type {boolean} ",
      "start": 1224,
      "end": 1303,
      "loc": {
        "start": {
          "line": 40,
          "column": 2
        },
        "end": {
          "line": 41,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "this",
        "keyword": "this",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "this",
      "start": 1306,
      "end": 1310,
      "loc": {
        "start": {
          "line": 42,
          "column": 2
        },
        "end": {
          "line": 42,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1310,
      "end": 1311,
      "loc": {
        "start": {
          "line": 42,
          "column": 6
        },
        "end": {
          "line": 42,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "loser",
      "start": 1311,
      "end": 1316,
      "loc": {
        "start": {
          "line": 42,
          "column": 7
        },
        "end": {
          "line": 42,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 1317,
      "end": 1318,
      "loc": {
        "start": {
          "line": 42,
          "column": 13
        },
        "end": {
          "line": 42,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "false",
        "keyword": "false",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "false",
      "start": 1319,
      "end": 1324,
      "loc": {
        "start": {
          "line": 42,
          "column": 15
        },
        "end": {
          "line": 42,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1324,
      "end": 1325,
      "loc": {
        "start": {
          "line": 42,
          "column": 20
        },
        "end": {
          "line": 42,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "for",
        "keyword": "for",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": true,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "for",
      "start": 1331,
      "end": 1334,
      "loc": {
        "start": {
          "line": 44,
          "column": 2
        },
        "end": {
          "line": 44,
          "column": 5
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1334,
      "end": 1335,
      "loc": {
        "start": {
          "line": 44,
          "column": 5
        },
        "end": {
          "line": 44,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "let",
        "keyword": "let",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "let",
      "start": 1335,
      "end": 1338,
      "loc": {
        "start": {
          "line": 44,
          "column": 6
        },
        "end": {
          "line": 44,
          "column": 9
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "i",
      "start": 1339,
      "end": 1340,
      "loc": {
        "start": {
          "line": 44,
          "column": 10
        },
        "end": {
          "line": 44,
          "column": 11
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 1341,
      "end": 1342,
      "loc": {
        "start": {
          "line": 44,
          "column": 12
        },
        "end": {
          "line": 44,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "num",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": 0,
      "start": 1343,
      "end": 1344,
      "loc": {
        "start": {
          "line": 44,
          "column": 14
        },
        "end": {
          "line": 44,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1344,
      "end": 1345,
      "loc": {
        "start": {
          "line": 44,
          "column": 15
        },
        "end": {
          "line": 44,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "i",
      "start": 1346,
      "end": 1347,
      "loc": {
        "start": {
          "line": 44,
          "column": 17
        },
        "end": {
          "line": 44,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "</>",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": 7,
        "updateContext": null
      },
      "value": "<",
      "start": 1347,
      "end": 1348,
      "loc": {
        "start": {
          "line": 44,
          "column": 18
        },
        "end": {
          "line": 44,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "rows",
      "start": 1348,
      "end": 1352,
      "loc": {
        "start": {
          "line": 44,
          "column": 19
        },
        "end": {
          "line": 44,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1352,
      "end": 1353,
      "loc": {
        "start": {
          "line": 44,
          "column": 23
        },
        "end": {
          "line": 44,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "i",
      "start": 1354,
      "end": 1355,
      "loc": {
        "start": {
          "line": 44,
          "column": 25
        },
        "end": {
          "line": 44,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "++/--",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": true,
        "postfix": true,
        "binop": null
      },
      "value": "++",
      "start": 1355,
      "end": 1357,
      "loc": {
        "start": {
          "line": 44,
          "column": 26
        },
        "end": {
          "line": 44,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1357,
      "end": 1358,
      "loc": {
        "start": {
          "line": 44,
          "column": 28
        },
        "end": {
          "line": 44,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1361,
      "end": 1362,
      "loc": {
        "start": {
          "line": 45,
          "column": 2
        },
        "end": {
          "line": 45,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "arr",
      "start": 1366,
      "end": 1369,
      "loc": {
        "start": {
          "line": 46,
          "column": 3
        },
        "end": {
          "line": 46,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "[",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1369,
      "end": 1370,
      "loc": {
        "start": {
          "line": 46,
          "column": 6
        },
        "end": {
          "line": 46,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "i",
      "start": 1370,
      "end": 1371,
      "loc": {
        "start": {
          "line": 46,
          "column": 7
        },
        "end": {
          "line": 46,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "]",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1371,
      "end": 1372,
      "loc": {
        "start": {
          "line": 46,
          "column": 8
        },
        "end": {
          "line": 46,
          "column": 9
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 1372,
      "end": 1373,
      "loc": {
        "start": {
          "line": 46,
          "column": 9
        },
        "end": {
          "line": 46,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "[",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1374,
      "end": 1375,
      "loc": {
        "start": {
          "line": 46,
          "column": 11
        },
        "end": {
          "line": 46,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "]",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1375,
      "end": 1376,
      "loc": {
        "start": {
          "line": 46,
          "column": 12
        },
        "end": {
          "line": 46,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1376,
      "end": 1377,
      "loc": {
        "start": {
          "line": 46,
          "column": 13
        },
        "end": {
          "line": 46,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "for",
        "keyword": "for",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": true,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "for",
      "start": 1381,
      "end": 1384,
      "loc": {
        "start": {
          "line": 47,
          "column": 3
        },
        "end": {
          "line": 47,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1384,
      "end": 1385,
      "loc": {
        "start": {
          "line": 47,
          "column": 6
        },
        "end": {
          "line": 47,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "let",
        "keyword": "let",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "let",
      "start": 1385,
      "end": 1388,
      "loc": {
        "start": {
          "line": 47,
          "column": 7
        },
        "end": {
          "line": 47,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "j",
      "start": 1389,
      "end": 1390,
      "loc": {
        "start": {
          "line": 47,
          "column": 11
        },
        "end": {
          "line": 47,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 1391,
      "end": 1392,
      "loc": {
        "start": {
          "line": 47,
          "column": 13
        },
        "end": {
          "line": 47,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "num",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": 0,
      "start": 1393,
      "end": 1394,
      "loc": {
        "start": {
          "line": 47,
          "column": 15
        },
        "end": {
          "line": 47,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1394,
      "end": 1395,
      "loc": {
        "start": {
          "line": 47,
          "column": 16
        },
        "end": {
          "line": 47,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "j",
      "start": 1396,
      "end": 1397,
      "loc": {
        "start": {
          "line": 47,
          "column": 18
        },
        "end": {
          "line": 47,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "</>",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": 7,
        "updateContext": null
      },
      "value": "<",
      "start": 1397,
      "end": 1398,
      "loc": {
        "start": {
          "line": 47,
          "column": 19
        },
        "end": {
          "line": 47,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "columns",
      "start": 1398,
      "end": 1405,
      "loc": {
        "start": {
          "line": 47,
          "column": 20
        },
        "end": {
          "line": 47,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1405,
      "end": 1406,
      "loc": {
        "start": {
          "line": 47,
          "column": 27
        },
        "end": {
          "line": 47,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "j",
      "start": 1407,
      "end": 1408,
      "loc": {
        "start": {
          "line": 47,
          "column": 29
        },
        "end": {
          "line": 47,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": "++/--",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": true,
        "postfix": true,
        "binop": null
      },
      "value": "++",
      "start": 1408,
      "end": 1410,
      "loc": {
        "start": {
          "line": 47,
          "column": 30
        },
        "end": {
          "line": 47,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1410,
      "end": 1411,
      "loc": {
        "start": {
          "line": 47,
          "column": 32
        },
        "end": {
          "line": 47,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1415,
      "end": 1416,
      "loc": {
        "start": {
          "line": 48,
          "column": 3
        },
        "end": {
          "line": 48,
          "column": 4
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "arr",
      "start": 1421,
      "end": 1424,
      "loc": {
        "start": {
          "line": 49,
          "column": 4
        },
        "end": {
          "line": 49,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "[",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1424,
      "end": 1425,
      "loc": {
        "start": {
          "line": 49,
          "column": 7
        },
        "end": {
          "line": 49,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "i",
      "start": 1425,
      "end": 1426,
      "loc": {
        "start": {
          "line": 49,
          "column": 8
        },
        "end": {
          "line": 49,
          "column": 9
        }
      }
    },
    {
      "type": {
        "label": "]",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1426,
      "end": 1427,
      "loc": {
        "start": {
          "line": 49,
          "column": 9
        },
        "end": {
          "line": 49,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "[",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1427,
      "end": 1428,
      "loc": {
        "start": {
          "line": 49,
          "column": 10
        },
        "end": {
          "line": 49,
          "column": 11
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "j",
      "start": 1428,
      "end": 1429,
      "loc": {
        "start": {
          "line": 49,
          "column": 11
        },
        "end": {
          "line": 49,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "]",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1429,
      "end": 1430,
      "loc": {
        "start": {
          "line": 49,
          "column": 12
        },
        "end": {
          "line": 49,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 1431,
      "end": 1432,
      "loc": {
        "start": {
          "line": 49,
          "column": 14
        },
        "end": {
          "line": 49,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "new",
        "keyword": "new",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "new",
      "start": 1433,
      "end": 1436,
      "loc": {
        "start": {
          "line": 49,
          "column": 16
        },
        "end": {
          "line": 49,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Tile",
      "start": 1437,
      "end": 1441,
      "loc": {
        "start": {
          "line": 49,
          "column": 20
        },
        "end": {
          "line": 49,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1441,
      "end": 1442,
      "loc": {
        "start": {
          "line": 49,
          "column": 24
        },
        "end": {
          "line": 49,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1442,
      "end": 1443,
      "loc": {
        "start": {
          "line": 49,
          "column": 25
        },
        "end": {
          "line": 49,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1443,
      "end": 1444,
      "loc": {
        "start": {
          "line": 49,
          "column": 26
        },
        "end": {
          "line": 49,
          "column": 27
        }
      }
    },
    {
      "type": "CommentLine",
      "value": " Adding default tiles",
      "start": 1444,
      "end": 1467,
      "loc": {
        "start": {
          "line": 49,
          "column": 27
        },
        "end": {
          "line": 49,
          "column": 50
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1471,
      "end": 1472,
      "loc": {
        "start": {
          "line": 50,
          "column": 3
        },
        "end": {
          "line": 50,
          "column": 4
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1475,
      "end": 1476,
      "loc": {
        "start": {
          "line": 51,
          "column": 2
        },
        "end": {
          "line": 51,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1478,
      "end": 1479,
      "loc": {
        "start": {
          "line": 52,
          "column": 1
        },
        "end": {
          "line": 52,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "plantMine",
      "start": 1483,
      "end": 1492,
      "loc": {
        "start": {
          "line": 54,
          "column": 1
        },
        "end": {
          "line": 54,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1492,
      "end": 1493,
      "loc": {
        "start": {
          "line": 54,
          "column": 10
        },
        "end": {
          "line": 54,
          "column": 11
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1493,
      "end": 1494,
      "loc": {
        "start": {
          "line": 54,
          "column": 11
        },
        "end": {
          "line": 54,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1495,
      "end": 1496,
      "loc": {
        "start": {
          "line": 54,
          "column": 13
        },
        "end": {
          "line": 54,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "let",
        "keyword": "let",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "let",
      "start": 1499,
      "end": 1502,
      "loc": {
        "start": {
          "line": 55,
          "column": 2
        },
        "end": {
          "line": 55,
          "column": 5
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "numMines",
      "start": 1503,
      "end": 1511,
      "loc": {
        "start": {
          "line": 55,
          "column": 6
        },
        "end": {
          "line": 55,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 1512,
      "end": 1513,
      "loc": {
        "start": {
          "line": 55,
          "column": 15
        },
        "end": {
          "line": 55,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "this",
        "keyword": "this",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "this",
      "start": 1514,
      "end": 1518,
      "loc": {
        "start": {
          "line": 55,
          "column": 17
        },
        "end": {
          "line": 55,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1518,
      "end": 1519,
      "loc": {
        "start": {
          "line": 55,
          "column": 21
        },
        "end": {
          "line": 55,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "minesTotal",
      "start": 1519,
      "end": 1529,
      "loc": {
        "start": {
          "line": 55,
          "column": 22
        },
        "end": {
          "line": 55,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1529,
      "end": 1530,
      "loc": {
        "start": {
          "line": 55,
          "column": 32
        },
        "end": {
          "line": 55,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "while",
        "keyword": "while",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": true,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "while",
      "start": 1533,
      "end": 1538,
      "loc": {
        "start": {
          "line": 56,
          "column": 2
        },
        "end": {
          "line": 56,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1538,
      "end": 1539,
      "loc": {
        "start": {
          "line": 56,
          "column": 7
        },
        "end": {
          "line": 56,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "numMines",
      "start": 1539,
      "end": 1547,
      "loc": {
        "start": {
          "line": 56,
          "column": 8
        },
        "end": {
          "line": 56,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "</>",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": 7,
        "updateContext": null
      },
      "value": ">",
      "start": 1547,
      "end": 1548,
      "loc": {
        "start": {
          "line": 56,
          "column": 16
        },
        "end": {
          "line": 56,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "num",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": 0,
      "start": 1549,
      "end": 1550,
      "loc": {
        "start": {
          "line": 56,
          "column": 18
        },
        "end": {
          "line": 56,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1550,
      "end": 1551,
      "loc": {
        "start": {
          "line": 56,
          "column": 19
        },
        "end": {
          "line": 56,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1554,
      "end": 1555,
      "loc": {
        "start": {
          "line": 57,
          "column": 2
        },
        "end": {
          "line": 57,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "let",
        "keyword": "let",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "let",
      "start": 1559,
      "end": 1562,
      "loc": {
        "start": {
          "line": 58,
          "column": 3
        },
        "end": {
          "line": 58,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "i",
      "start": 1563,
      "end": 1564,
      "loc": {
        "start": {
          "line": 58,
          "column": 7
        },
        "end": {
          "line": 58,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 1564,
      "end": 1565,
      "loc": {
        "start": {
          "line": 58,
          "column": 8
        },
        "end": {
          "line": 58,
          "column": 9
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Math",
      "start": 1566,
      "end": 1570,
      "loc": {
        "start": {
          "line": 58,
          "column": 10
        },
        "end": {
          "line": 58,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1570,
      "end": 1571,
      "loc": {
        "start": {
          "line": 58,
          "column": 14
        },
        "end": {
          "line": 58,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "floor",
      "start": 1571,
      "end": 1576,
      "loc": {
        "start": {
          "line": 58,
          "column": 15
        },
        "end": {
          "line": 58,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1576,
      "end": 1577,
      "loc": {
        "start": {
          "line": 58,
          "column": 20
        },
        "end": {
          "line": 58,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Math",
      "start": 1577,
      "end": 1581,
      "loc": {
        "start": {
          "line": 58,
          "column": 21
        },
        "end": {
          "line": 58,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1581,
      "end": 1582,
      "loc": {
        "start": {
          "line": 58,
          "column": 25
        },
        "end": {
          "line": 58,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "random",
      "start": 1582,
      "end": 1588,
      "loc": {
        "start": {
          "line": 58,
          "column": 26
        },
        "end": {
          "line": 58,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1588,
      "end": 1589,
      "loc": {
        "start": {
          "line": 58,
          "column": 32
        },
        "end": {
          "line": 58,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1589,
      "end": 1590,
      "loc": {
        "start": {
          "line": 58,
          "column": 33
        },
        "end": {
          "line": 58,
          "column": 34
        }
      }
    },
    {
      "type": {
        "label": "*",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": 10,
        "updateContext": null
      },
      "value": "*",
      "start": 1591,
      "end": 1592,
      "loc": {
        "start": {
          "line": 58,
          "column": 35
        },
        "end": {
          "line": 58,
          "column": 36
        }
      }
    },
    {
      "type": {
        "label": "this",
        "keyword": "this",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "this",
      "start": 1593,
      "end": 1597,
      "loc": {
        "start": {
          "line": 58,
          "column": 37
        },
        "end": {
          "line": 58,
          "column": 41
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1597,
      "end": 1598,
      "loc": {
        "start": {
          "line": 58,
          "column": 41
        },
        "end": {
          "line": 58,
          "column": 42
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "rows",
      "start": 1598,
      "end": 1602,
      "loc": {
        "start": {
          "line": 58,
          "column": 42
        },
        "end": {
          "line": 58,
          "column": 46
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1602,
      "end": 1603,
      "loc": {
        "start": {
          "line": 58,
          "column": 46
        },
        "end": {
          "line": 58,
          "column": 47
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1603,
      "end": 1604,
      "loc": {
        "start": {
          "line": 58,
          "column": 47
        },
        "end": {
          "line": 58,
          "column": 48
        }
      }
    },
    {
      "type": "CommentLine",
      "value": " Assign random i no larger than numRows",
      "start": 1605,
      "end": 1646,
      "loc": {
        "start": {
          "line": 58,
          "column": 49
        },
        "end": {
          "line": 58,
          "column": 90
        }
      }
    },
    {
      "type": {
        "label": "let",
        "keyword": "let",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "let",
      "start": 1650,
      "end": 1653,
      "loc": {
        "start": {
          "line": 59,
          "column": 3
        },
        "end": {
          "line": 59,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "j",
      "start": 1654,
      "end": 1655,
      "loc": {
        "start": {
          "line": 59,
          "column": 7
        },
        "end": {
          "line": 59,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 1655,
      "end": 1656,
      "loc": {
        "start": {
          "line": 59,
          "column": 8
        },
        "end": {
          "line": 59,
          "column": 9
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Math",
      "start": 1657,
      "end": 1661,
      "loc": {
        "start": {
          "line": 59,
          "column": 10
        },
        "end": {
          "line": 59,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1661,
      "end": 1662,
      "loc": {
        "start": {
          "line": 59,
          "column": 14
        },
        "end": {
          "line": 59,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "floor",
      "start": 1662,
      "end": 1667,
      "loc": {
        "start": {
          "line": 59,
          "column": 15
        },
        "end": {
          "line": 59,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1667,
      "end": 1668,
      "loc": {
        "start": {
          "line": 59,
          "column": 20
        },
        "end": {
          "line": 59,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Math",
      "start": 1668,
      "end": 1672,
      "loc": {
        "start": {
          "line": 59,
          "column": 21
        },
        "end": {
          "line": 59,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1672,
      "end": 1673,
      "loc": {
        "start": {
          "line": 59,
          "column": 25
        },
        "end": {
          "line": 59,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "random",
      "start": 1673,
      "end": 1679,
      "loc": {
        "start": {
          "line": 59,
          "column": 26
        },
        "end": {
          "line": 59,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1679,
      "end": 1680,
      "loc": {
        "start": {
          "line": 59,
          "column": 32
        },
        "end": {
          "line": 59,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1680,
      "end": 1681,
      "loc": {
        "start": {
          "line": 59,
          "column": 33
        },
        "end": {
          "line": 59,
          "column": 34
        }
      }
    },
    {
      "type": {
        "label": "*",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": 10,
        "updateContext": null
      },
      "value": "*",
      "start": 1682,
      "end": 1683,
      "loc": {
        "start": {
          "line": 59,
          "column": 35
        },
        "end": {
          "line": 59,
          "column": 36
        }
      }
    },
    {
      "type": {
        "label": "this",
        "keyword": "this",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "this",
      "start": 1684,
      "end": 1688,
      "loc": {
        "start": {
          "line": 59,
          "column": 37
        },
        "end": {
          "line": 59,
          "column": 41
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1688,
      "end": 1689,
      "loc": {
        "start": {
          "line": 59,
          "column": 41
        },
        "end": {
          "line": 59,
          "column": 42
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "columns",
      "start": 1689,
      "end": 1696,
      "loc": {
        "start": {
          "line": 59,
          "column": 42
        },
        "end": {
          "line": 59,
          "column": 49
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1696,
      "end": 1697,
      "loc": {
        "start": {
          "line": 59,
          "column": 49
        },
        "end": {
          "line": 59,
          "column": 50
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1697,
      "end": 1698,
      "loc": {
        "start": {
          "line": 59,
          "column": 50
        },
        "end": {
          "line": 59,
          "column": 51
        }
      }
    },
    {
      "type": "CommentLine",
      "value": " Assign random j no larger than numColumns",
      "start": 1698,
      "end": 1742,
      "loc": {
        "start": {
          "line": 59,
          "column": 51
        },
        "end": {
          "line": 59,
          "column": 95
        }
      }
    },
    {
      "type": {
        "label": "if",
        "keyword": "if",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "if",
      "start": 1746,
      "end": 1748,
      "loc": {
        "start": {
          "line": 60,
          "column": 3
        },
        "end": {
          "line": 60,
          "column": 5
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1748,
      "end": 1749,
      "loc": {
        "start": {
          "line": 60,
          "column": 5
        },
        "end": {
          "line": 60,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "arr",
      "start": 1749,
      "end": 1752,
      "loc": {
        "start": {
          "line": 60,
          "column": 6
        },
        "end": {
          "line": 60,
          "column": 9
        }
      }
    },
    {
      "type": {
        "label": "[",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1752,
      "end": 1753,
      "loc": {
        "start": {
          "line": 60,
          "column": 9
        },
        "end": {
          "line": 60,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "i",
      "start": 1753,
      "end": 1754,
      "loc": {
        "start": {
          "line": 60,
          "column": 10
        },
        "end": {
          "line": 60,
          "column": 11
        }
      }
    },
    {
      "type": {
        "label": "]",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1754,
      "end": 1755,
      "loc": {
        "start": {
          "line": 60,
          "column": 11
        },
        "end": {
          "line": 60,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "[",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1755,
      "end": 1756,
      "loc": {
        "start": {
          "line": 60,
          "column": 12
        },
        "end": {
          "line": 60,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "j",
      "start": 1756,
      "end": 1757,
      "loc": {
        "start": {
          "line": 60,
          "column": 13
        },
        "end": {
          "line": 60,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "]",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1757,
      "end": 1758,
      "loc": {
        "start": {
          "line": 60,
          "column": 14
        },
        "end": {
          "line": 60,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1758,
      "end": 1759,
      "loc": {
        "start": {
          "line": 60,
          "column": 15
        },
        "end": {
          "line": 60,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "isMine",
      "start": 1759,
      "end": 1765,
      "loc": {
        "start": {
          "line": 60,
          "column": 16
        },
        "end": {
          "line": 60,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "==/!=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": 6,
        "updateContext": null
      },
      "value": "==",
      "start": 1765,
      "end": 1767,
      "loc": {
        "start": {
          "line": 60,
          "column": 22
        },
        "end": {
          "line": 60,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "false",
        "keyword": "false",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "false",
      "start": 1768,
      "end": 1773,
      "loc": {
        "start": {
          "line": 60,
          "column": 25
        },
        "end": {
          "line": 60,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1773,
      "end": 1774,
      "loc": {
        "start": {
          "line": 60,
          "column": 30
        },
        "end": {
          "line": 60,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1778,
      "end": 1779,
      "loc": {
        "start": {
          "line": 61,
          "column": 3
        },
        "end": {
          "line": 61,
          "column": 4
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "arr",
      "start": 1784,
      "end": 1787,
      "loc": {
        "start": {
          "line": 62,
          "column": 4
        },
        "end": {
          "line": 62,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "[",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1787,
      "end": 1788,
      "loc": {
        "start": {
          "line": 62,
          "column": 7
        },
        "end": {
          "line": 62,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "i",
      "start": 1788,
      "end": 1789,
      "loc": {
        "start": {
          "line": 62,
          "column": 8
        },
        "end": {
          "line": 62,
          "column": 9
        }
      }
    },
    {
      "type": {
        "label": "]",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1789,
      "end": 1790,
      "loc": {
        "start": {
          "line": 62,
          "column": 9
        },
        "end": {
          "line": 62,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "[",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1790,
      "end": 1791,
      "loc": {
        "start": {
          "line": 62,
          "column": 10
        },
        "end": {
          "line": 62,
          "column": 11
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "j",
      "start": 1791,
      "end": 1792,
      "loc": {
        "start": {
          "line": 62,
          "column": 11
        },
        "end": {
          "line": 62,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "]",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1792,
      "end": 1793,
      "loc": {
        "start": {
          "line": 62,
          "column": 12
        },
        "end": {
          "line": 62,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1793,
      "end": 1794,
      "loc": {
        "start": {
          "line": 62,
          "column": 13
        },
        "end": {
          "line": 62,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "isMine",
      "start": 1794,
      "end": 1800,
      "loc": {
        "start": {
          "line": 62,
          "column": 14
        },
        "end": {
          "line": 62,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 1800,
      "end": 1801,
      "loc": {
        "start": {
          "line": 62,
          "column": 20
        },
        "end": {
          "line": 62,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "true",
        "keyword": "true",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "true",
      "start": 1802,
      "end": 1806,
      "loc": {
        "start": {
          "line": 62,
          "column": 22
        },
        "end": {
          "line": 62,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1806,
      "end": 1807,
      "loc": {
        "start": {
          "line": 62,
          "column": 26
        },
        "end": {
          "line": 62,
          "column": 27
        }
      }
    },
    {
      "type": "CommentLine",
      "value": " Reassign mine to equal true",
      "start": 1808,
      "end": 1838,
      "loc": {
        "start": {
          "line": 62,
          "column": 28
        },
        "end": {
          "line": 62,
          "column": 58
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "numMines",
      "start": 1843,
      "end": 1851,
      "loc": {
        "start": {
          "line": 63,
          "column": 4
        },
        "end": {
          "line": 63,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 1851,
      "end": 1852,
      "loc": {
        "start": {
          "line": 63,
          "column": 12
        },
        "end": {
          "line": 63,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "numMines",
      "start": 1853,
      "end": 1861,
      "loc": {
        "start": {
          "line": 63,
          "column": 14
        },
        "end": {
          "line": 63,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "+/-",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": true,
        "postfix": false,
        "binop": 9,
        "updateContext": null
      },
      "value": "-",
      "start": 1861,
      "end": 1862,
      "loc": {
        "start": {
          "line": 63,
          "column": 22
        },
        "end": {
          "line": 63,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "num",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": 1,
      "start": 1863,
      "end": 1864,
      "loc": {
        "start": {
          "line": 63,
          "column": 24
        },
        "end": {
          "line": 63,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1864,
      "end": 1865,
      "loc": {
        "start": {
          "line": 63,
          "column": 25
        },
        "end": {
          "line": 63,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1869,
      "end": 1870,
      "loc": {
        "start": {
          "line": 64,
          "column": 3
        },
        "end": {
          "line": 64,
          "column": 4
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1873,
      "end": 1874,
      "loc": {
        "start": {
          "line": 65,
          "column": 2
        },
        "end": {
          "line": 65,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1876,
      "end": 1877,
      "loc": {
        "start": {
          "line": 66,
          "column": 1
        },
        "end": {
          "line": 66,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1878,
      "end": 1879,
      "loc": {
        "start": {
          "line": 67,
          "column": 0
        },
        "end": {
          "line": 67,
          "column": 1
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "\n\n//This function create an arr, whcih size is based on user input.\n//Parameter: rows, columns.\nfunction createBoard(numMines, rows, columns)  //all int type.\n{\n    var arr = [rows]; //Fixed size 2d arr from user input parameters\n    for(var i = 0; i<rows; i++)\n    {\n        arr[i]= [];\n        for(var j = 0; j<columns; j++)\n        {\n            arr[i][j] = new Tile(false, 9,false,false);// Adding default tiles\n        }\n    }\n    plantMine(arr, numMines, rows, columns);//Call to plantMine which returns arr with mines planted and numMines inserted.\n    return arr;\n}\n\n//This function plant the Mines inside the arr.\n//The Number of Mines are given by player.\n//Using Math.random() to ramdomly plant the Mines.\n//parameter: arr, number of Mine.\nfunction plantMine(arr, numMines, rows, columns)\n{\n\t'use strict';\n    while(numMines> 0)\n    {\n        let i= Math.floor(Math.random() * rows); // Assign random i no larger than numRows\n        let j= Math.floor(Math.random() * columns);// Assign random j no larger than numColumns\n        if(arr[i][j].isMine== false)\n        {\n            arr[i][j].isMine= true; // Reassign mine to equal true\n            numMines= numMines- 1;\n        }\n    }\n    plantAdjNum(arr);// Call to assign adjNum in tiles\n    return arr;\n}\n\n\n\n//This function change each tile's adjNum.\n//parameter: arr.\nfunction plantAdjNum(arr)\n{\n\t'use strict';\n    for (let i = 0; i < arr.length; i++)\n    {\n        for (let j = 0; j < arr[i].length; j++)\n        {\n            if(arr[i][j].isMine == false)\n            {\n                var tempAdjNum= 0;\n                //\"if, elseif\" tiles on the edge of the board so we don't search outside the board. Starting top left and moving clockwise.\n\n                //Top left tile\n                if (i == 0 && j == 0)\n                {\n                    //Right block check.\n                    if (arr[i][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //TopRow && 0<column<arr[j].length-1\n                else if( i == 0 && j > 0 && j < arr[i].length - 1)\n                {\n                    //Right block check.\n                    if (arr[i][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //Top Right tile\n                else if ( i == 0 && j == arr[i].length -1)\n                {\n                    //Lower block check.\n                    if (arr[(i + 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //Right column 0<i<arr[j].length-1\n                else if(i > 0 &&  j == arr[i].length - 1 && i < arr.length - 1)\n                {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //Bottom right tile\n                else if(i == arr.length - 1 && j == arr[i].length - 1)\n                {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //Bottom row 0<j<arr[i].length-1\n                else if(i == arr.length - 1 && j > 0 && j < arr[i].length - 1)\n                {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //Bottom left tile\n                else if(i == arr.length - 1 && j == 0)\n                {\n                    //Upper block check.\n                    if (arr[(i - 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //Left column 0<i<arr[j].length\n                else if(i > 0 && j == 0 && i < arr.length - 1)\n                {\n                    //Upper block check.\n                    if (arr[(i - 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                //Every tile inside of the outer rows and columns\n                else if (i > 0 && j > 0 && i < arr.length - 1 && j < arr[i].length - 1)\n                {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].isMine == true)\n                    {\n                        tempAdjNum= tempAdjNum+ 1;\n                    }\n                }\n                arr[i][j].adjNum= tempAdjNum;\n            }\n        }\n    }\n    return arr;\n}\n\n//This function change one tile's falgged.\n//parameter: arr, row, column.\nfunction setFlag(arr, row, column)\n{\n    if(arr[row][column].flagged== false && arr[row][column].revealed== false)\n    {\n    arr[row][column].flagged= true;\n    }\n    //If they already have flagged and want to remove the flag.\n    else if(arr[row][column].flagged== true && arr[row][column].revealed== false)\n    {\n        document.getElementById(\"demo\").innerHTML = \"What are you doing?  You changed your mind?\";\n        arr[row][column].flagged== false;//Remove flag\n    }\n    return arr;\n}\n\n\n//The is a recursive function.\n//It will execute any one of block on the block been clicked.\n//It will change all the tile's revealed = true, who have number 0.\n//Even the tile set with flagged.\n//parameter:  arr, Game, row(i), column(j).\n\nfunction clickReveal(arr, Game, i, j) {\n    if (arr[i][j].isMine == true) {\n        arr[i][j].revealed = true;\n        Game.isLose = true;             //If the click by player and it was a bomb, the game is over.\n    }\n    else {\n\n        if (arr[i][j].adjNum > 0 && arr[i][j].adjNum < 9) {\n            if (arr[i][j].revealed == false) {\n                arr[i][j].revealed = true;\n                arr[i][j].flagged = false;\n            }\n        }\n        else if (arr[i][j].adjNum == 0) {\n            if (arr[i][j].revealed == false) {\n                arr[i][j].revealed = true;\n                arr[i][j].flagged = false;\n\n                if ((i - 1) > 0 && (j - 1) > 0 && (i + 1) < arr.length && (j + 1) < arr[i].length) {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j - 1));\n                    }\n                    else if (arr[(i - 1)][(j - 1)].adjNum < 9 && arr[(i - 1)][(j - 1)].revealed == false) {\n                        arr[(i - 1)][(j - 1)].revealed = true;\n                        arr[(i - 1)][(j - 1)].flagged = false;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), j);\n                    }\n                    else if (arr[(i - 1)][j].adjNum < 9 && arr[(i - 1)][j].revealed == false) {\n                        arr[(i - 1)][j].revealed = true;\n                        arr[(i - 1)][j].flagged = false;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j + 1));\n                    }\n                    else if (arr[(i - 1)][(j + 1)].adjNum < 9 && arr[(i - 1)][(j + 1)].revealed == false) {\n                        arr[(i - 1)][(j + 1)].revealed = true;\n                        arr[(i - 1)][(j + 1)].flagged = false;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j - 1));\n                    }\n                    else if (arr[i][(j - 1)].adjNum < 9 && arr[i][(j - 1)].revealed == false) {\n                        arr[i][(j - 1)].revealed = true;\n                        arr[i][(j - 1)].flagged = false;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j + 1));\n                    }\n                    else if (arr[i][(j + 1)].adjNum < 9 && arr[i][(j + 1)].revealed == false) {\n                        arr[i][(j + 1)].revealed = true;\n                        arr[i][(j + 1)].flagged = false;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j - 1));\n                    }\n                    else if (arr[(i + 1)][(j - 1)].adjNum < 9 && arr[(i + 1)][(j - 1)].revealed == false) {\n                        arr[(i + 1)][(j - 1)].revealed = true;\n                        arr[(i + 1)][(j - 1)].flagged = false;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), j);\n                    }\n                    else if (arr[(i + 1)][j].adjNum < 9 && arr[(i + 1)][j].revealed == false) {\n                        arr[(i + 1)][j].revealed = true;\n                        arr[(i + 1)][j].flagged = false;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j + 1));\n                    }\n                    else if (arr[(i + 1)][(j + 1)].adjNum < 9 && arr[(i + 1)][(j + 1)].revealed == false) {\n                        arr[(i + 1)][(j + 1)].revealed = true;\n                        arr[(i + 1)][(j + 1)].flagged = false;\n                    }\n                }\n                    //check speical left column without two corner blocks\t\t\t\t\t\t\t//fixed\n                else if (i > 0 && i < arr.length - 1 && j == 0) {\n                    //Upper block check.\n                    if (arr[(i - 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), j);\n                    }\n                    else if (arr[(i - 1)][j].adjNum < 9 && arr[(i - 1)][j].revealed == false) {\n                        arr[(i - 1)][j].revealed = true;\n                        arr[(i - 1)][j].flagged = false;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j + 1));\n                    }\n                    else if (arr[(i - 1)][(j + 1)].adjNum < 9 && arr[(i - 1)][(j + 1)].revealed == false) {\n                        arr[(i - 1)][(j + 1)].revealed = true;\n                        arr[(i - 1)][(j + 1)].flagged = false;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j + 1));\n                    }\n                    else if (arr[i][(j + 1)].adjNum < 9 && arr[i][(j + 1)].revealed == false) {\n                        arr[i][(j + 1)].revealed = true;\n                        arr[i][(j + 1)].flagged = false;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), j);\n                    }\n                    else if (arr[(i + 1)][j].adjNum < 9 && arr[(i + 1)][j].revealed == false) {\n                        arr[(i + 1)][j].revealed = true;\n                        arr[(i + 1)][j].flagged = false;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j + 1));\n                    }\n                }\n                    //check speical Lower row\n                else if (i == arr.length - 1 && j > 0 && j < arr[i].length - 1) \t\t//fixed\n                {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j - 1));\n                    }\n                    else if (arr[(i - 1)][(j - 1)].adjNum < 9 && arr[(i - 1)][(j - 1)].revealed == false) {\n                        arr[(i - 1)][(j - 1)].revealed = true;\n                        arr[(i - 1)][(j - 1)].flagged = false;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), j);\n                    }\n                    else if (arr[(i - 1)][j].adjNum < 9 && arr[(i - 1)][j].revealed == false) {\n                        arr[(i - 1)][j].revealed = true;\n                        arr[(i - 1)][j].flagged = false;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j + 1));\n                    }\n                    else if (arr[(i - 1)][(j + 1)].adjNum < 9 && arr[(i - 1)][(j + 1)].revealed == false) {\n                        arr[(i - 1)][(j + 1)].revealed = true;\n                        arr[(i - 1)][(j + 1)].flagged = false;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j - 1));\n                    }\n                    else if (arr[i][(j - 1)].adjNum < 9 && arr[i][(j - 1)].revealed == false) {\n                        arr[i][(j - 1)].revealed = true;\n                        arr[i][(j - 1)].flagged = false;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j + 1));\n                    }\n                    else if (arr[i][(j + 1)].adjNum < 9 && arr[i][(j + 1)].revealed == false) {\n                        arr[i][(j + 1)].revealed = true;\n                        arr[i][(j + 1)].flagged = false;\n                    }\n                }\n                    //check speical right column\n                else if (i > 0 && i < arr.length - 1 && j == arr[i].length - 1) \t\t\t//fixed\n                {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j - 1));\n                    }\n                    else if (arr[(i - 1)][(j - 1)].adjNum < 9 && arr[(i - 1)][(j - 1)].revealed == false) {\n                        arr[(i - 1)][(j - 1)].revealed = true;\n                        arr[(i - 1)][(j - 1)].flagged = false;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), j);\n                    }\n                    else if (arr[(i - 1)][j].adjNum < 9 && arr[(i - 1)][j].revealed == false) {\n                        arr[(i - 1)][j].revealed = true;\n                        arr[(i - 1)][j].flagged = false;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j - 1));\n                    }\n                    else if (arr[i][(j - 1)].adjNum < 9 && arr[i][(j - 1)].revealed == false) {\n                        arr[i][(j - 1)].revealed = true;\n                        arr[i][(j - 1)].flagged = false;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j - 1));\n                    }\n                    else if (arr[(i + 1)][(j - 1)].adjNum < 9 && arr[(i + 1)][(j - 1)].revealed == false) {\n                        arr[(i + 1)][(j - 1)].revealed = true;\n                        arr[(i + 1)][(j - 1)].flagged = false;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].adjNum == 0) {\n\n                        clickReveal(arr, Game, (i + 1), j);\n                    }\n                    else if (arr[(i + 1)][j].adjNum < 9 && arr[(i + 1)][j].revealed == false) {\n                        arr[(i + 1)][j].revealed = true;\n                        arr[(i + 1)][j].flagged = false;\n                    }\n                }\n                    //check speical Upper row\t\t\t\t\t\t\t\t\t\t\t\t//fixed\n                else if (i == 0 && j > 0 && j < arr[i].length - 1) {\n                    //left block check.\n                    if (arr[i][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j - 1));\n                    }\n                    else if (arr[i][(j - 1)].adjNum < 9 && arr[i][(j - 1)].revealed == false) {\n                        arr[i][(j - 1)].revealed = true;\n                        arr[i][(j - 1)].flagged = false;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j + 1));\n                    }\n                    else if (arr[i][(j + 1)].adjNum < 9 && arr[i][(j + 1)].revealed == false) {\n                        arr[i][(j + 1)].revealed = true;\n                        arr[i][(j + 1)].flagged = false;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j - 1));\n                    }\n                    else if (arr[(i + 1)][(j - 1)].adjNum < 9 && arr[(i + 1)][(j - 1)].revealed == false) {\n                        arr[(i + 1)][(j - 1)].revealed = true;\n                        arr[(i + 1)][(j - 1)].flagged = false;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), j);\n                    }\n                    else if (arr[(i + 1)][j].adjNum < 9 && arr[(i + 1)][j].revealed == false) {\n                        arr[(i + 1)][j].revealed = true;\n                        arr[(i + 1)][j].flagged = false;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j + 1));\n                    }\n                    else if (arr[(i + 1)][(j + 1)].adjNum < 9 && arr[(i + 1)][(j + 1)].revealed == false) {\n                        arr[(i + 1)][(j + 1)].revealed = true;\n                        arr[(i + 1)][(j + 1)].flagged = false;\n                    }\n                }\n                    //Upper left corner\n                else if (i == 0 && j == 0) {\n                    //Right block check.\n                    if (arr[i][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j + 1));\n                    }\n                    else if (arr[i][(j + 1)].adjNum < 9 && arr[i][(j + 1)].revealed == false) {\n                        arr[i][(j + 1)].revealed = true;\n                        arr[i][(j + 1)].flagged = false;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), j);\n                    }\n                    else if (arr[(i + 1)][j].adjNum < 9 && arr[(i + 1)][j].revealed == false) {\n                        arr[(i + 1)][j].revealed = true;\n                        arr[(i + 1)][j].flagged = false;\n                    }\n                    //Lower right block check.\n                    if (arr[(i + 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j + 1));\n                    }\n                    else if (arr[(i + 1)][(j + 1)].adjNum < 9 && arr[(i + 1)][(j + 1)].revealed == false) {\n                        arr[(i + 1)][(j + 1)].revealed = true;\n                        arr[(i + 1)][(j + 1)].flagged = false;\n                    }\n                }\n                    //Upper right corner\n                else if (i == 0 && j == arr[i].length - 1) {\n                    //left block check.\n                    if (arr[i][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j - 1));\n                    }\n                    else if (arr[i][(j - 1)].adjNum < 9 && arr[i][(j - 1)].revealed == false) {\n                        arr[i][(j - 1)].revealed = true;\n                        arr[i][(j - 1)].flagged = false;\n                    }\n                    //Lower left block check.\n                    if (arr[(i + 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), (j - 1));\n                    }\n                    else if (arr[(i + 1)][(j - 1)].adjNum < 9 && arr[(i + 1)][(j - 1)].revealed == false) {\n                        arr[(i + 1)][(j - 1)].revealed = true;\n                        arr[(i + 1)][(j - 1)].flagged = false;\n                    }\n                    //Lower block check.\n                    if (arr[(i + 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i + 1), j);\n                    }\n                    else if (arr[(i + 1)][j].adjNum < 9 && arr[(i + 1)][j].revealed == false) {\n                        arr[(i + 1)][j].revealed = true;\n                        arr[(i + 1)][j].flagged = false;\n                    }\n                }\n                    //Lower left corner\n                else if (i == arr.length - 1 && j == 0) {\n                    //Upper block check.\n                    if (arr[(i - 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), j);\n                    }\n                    else if (arr[(i - 1)][j].adjNum < 9 && arr[(i - 1)][j].revealed == false) {\n                        arr[(i - 1)][j].revealed = true;\n                        arr[(i - 1)][j].flagged = false;\n                    }\n                    //Upper right block check.\n                    if (arr[(i - 1)][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j + 1));\n                    }\n                    else if (arr[(i - 1)][(j + 1)].adjNum < 9 && arr[(i - 1)][(j + 1)].revealed == false) {\n                        arr[(i - 1)][(j + 1)].revealed = true;\n                        arr[(i - 1)][(j + 1)].flagged = false;\n                    }\n                    //Right block check.\n                    if (arr[i][(j + 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j + 1));\n                    }\n                    else if (arr[i][(j + 1)].adjNum < 9 && arr[i][(j + 1)].revealed == false) {\n                        arr[i][(j + 1)].revealed = true;\n                        arr[i][(j + 1)].flagged = false;\n                    }\n                }\n                    //Lower right corner\n                else if (i == arr.length - 1 && j == arr[i].length - 1) {\n                    //Upper left block check.\n                    if (arr[(i - 1)][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), (j - 1));\n                    }\n                    else if (arr[(i - 1)][(j - 1)].adjNum < 9 && arr[(i - 1)][(j - 1)].revealed == false) {\n                        arr[(i - 1)][(j - 1)].revealed = true;\n                        arr[(i - 1)][(j - 1)].flagged = false;\n                    }\n                    //Upper block check.\n                    if (arr[(i - 1)][j].adjNum == 0) {\n                        clickReveal(arr, Game, (i - 1), j);\n                    }\n                    else if (arr[(i - 1)][j].adjNum < 9 && arr[(i - 1)][j].revealed == false) {\n                        arr[(i - 1)][j].revealed = true;\n                        arr[(i - 1)][j].flagged = false;\n                    }\n                    //left block check.\n                    if (arr[i][(j - 1)].adjNum == 0) {\n                        clickReveal(arr, Game, i, (j - 1));\n                    }\n                    else if (arr[i][(j - 1)].adjNum < 9 && arr[i][(j - 1)].revealed == false) {\n                        arr[i][(j - 1)].revealed = true;\n                        arr[i][(j - 1)].flagged = false;\n                    }\n                }\n            }\n        }\n    }\n}\n",
      "start": 1881,
      "end": 32411,
      "loc": {
        "start": {
          "line": 69,
          "column": 0
        },
        "end": {
          "line": 759,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 32411,
      "end": 32411,
      "loc": {
        "start": {
          "line": 759,
          "column": 2
        },
        "end": {
          "line": 759,
          "column": 2
        }
      }
    }
  ]
}